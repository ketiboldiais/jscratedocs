"use strict";(self.webpackChunkjscratedocs=self.webpackChunkjscratedocs||[]).push([[952],{4131:(t,e,n)=>{n.d(e,{QA:()=>_a,mp:()=>fa,wc:()=>Qa});var a=n(7294),i=n(2348),s=n(456);const r=t=>{let{className:e="",width:n=200,height:i=200,cwidth:s=100,cheight:r=i/n,margins:l=[10,10,10,10],children:o}=t;const h=e?"hago "+e:"hago",m=l[0],c=l[1],p=l[2],u=l[3],d="0 0 "+(n-u-c+u+c)+" "+(i-m-p+m+p),g={display:"block",position:"relative",width:s+"%",paddingBottom:s*r+"%",backgroundColor:"inherit",overflow:"hidden"};return a.createElement("figure",{className:h},a.createElement("div",{className:"hago_svg_container",style:g},a.createElement("svg",{style:{display:"inline-block",position:"absolute",top:0,left:0},className:"hago_svg",viewBox:d,preserveAspectRatio:"xMinYMin meet"},a.createElement("g",{className:"svgElement",transform:"translate("+u+", "+m+")"},o))))};function l(t){let{val:e,block:n=!0}=t;return n?a.createElement(s.Z,{block:!0},""+e):a.createElement(s.Z,null,""+e)}const o=t=>{let{text:e,width:n=50,offset:i={x:0,y:0},dx:s=0,dy:r=0,height:o=50,fontsize:h=.7,color:m="black",fitContent:c=!1,textAlign:p="center",block:u=!0}=t;return a.createElement("g",{transform:"translate("+i.x+", "+i.y+")",dx:s,dy:r},a.createElement("foreignObject",{width:n,height:o},a.createElement("div",{style:{fontSize:h+"rem",textAlign:""+p,height:c?"fit-content":"",width:c?"fit-content":"",padding:0,margin:0,color:m}},a.createElement(l,{val:""+e,block:u}))))};function h(t){let{val:e,fontSize:n=.8,color:i="black",pos:s={x:0,y:0},dx:r=0,dy:l=0,width:h=50,height:m=50,fitContent:c=!1,textAlign:p="center",latex:u=!0,anchor:d="middle",block:g=!0}=t;return u?a.createElement(o,{text:""+e,offset:{x:s.x,y:s.y},fitContent:c,color:i,dx:r,dy:l,width:h,height:m,fontsize:n,textAlign:p,block:g}):a.createElement("text",{textAnchor:d,x:s.x,y:s.y,dx:r,dy:l,fontSize:n+"rem",fill:i},e)}const m=(t,e,n)=>{const a=n[0],i=n[1],s=n[2];return{width:t-n[3]-i,height:e-a-s}};function c(t){return void 0===t&&(t="hago"),t+"_"+Date.now()}function p(t,e){return"translate("+t+", "+e+")"}function u(t){return void 0!==t}function d(t){return void 0===t}function g(t){return null===t}const f=t=>{let e=t;return!("object"!=typeof t||null===t)&&(()=>{for(;null!==Object.getPrototypeOf(e=Object.getPrototypeOf(e)););return Object.getPrototypeOf(t)===e})()};function _(t,e){return d(t)?e:e+" "+t}function y(t){let e=[];for(let n=0;n<t.length;n++){let a=t[n];if(f(a))a.data||(a.data=1),e.push(a);else{let t={val:a,data:1};e.push(t)}}return e}const v=t=>{let e=[];const n={child:t[0][0],parent:""};let a,i,s,r,l;e.push(n);for(let o=0;o<t.length;o++)l=t[o][0],a=t[o][1][0],i=t[o][1][1],s=g(a)?{child:"",parent:l,hide:!0}:f(a)?{child:a.val,parent:l,...a}:{child:a,parent:l},e.push(s),r=g(i)?{child:"",parent:l,hide:!0}:f(i)?{child:i.val,parent:l,...i}:{child:i,parent:l},e.push(r);return e};function x(t){let{cx:e,cy:n,r:i,fill:s,stroke:r}=t;return a.createElement("circle",{cx:e,cy:n,r:i,fill:s,stroke:r})}function N(t){let{fill:e="black"}=t;return a.createElement("path",{d:"M0,-5L10,0L0,5Z",fill:e})}const k=t=>{let{id:e,type:n="arrow",className:i,arrowColor:s,radius:r,refX:l=r,refY:o=r,width:h,height:m,cx:c,cy:p,circleFillColor:u="white",circleStrokeColor:d="black",orient:g,viewbox:f="0 -5 10 10"}=t;return a.createElement("marker",{id:e,className:i,viewBox:f,refX:l,refY:o,orient:g,markerWidth:h,markerHeight:m},(()=>{switch(n){case"arrow":return a.createElement(N,{fill:s});case"circle":return a.createElement(x,{cx:c,cy:p,r:r,fill:u,stroke:d});default:return a.createElement(a.Fragment,null)}})())};function M(t,e){void 0===e&&(e=25);const n=[1],a=function(t,e){e.children&&e.children.length>0&&(n.length<=t+1&&n.push(0),n[t+1]+=e.children.length,e.children.forEach((function(e){a(t+1,e)})))};return a(0,t),(0,i.Fp7)(n)*e}function w(t){var e,n,a,i,s;return(null===(n=null===(e=null==t?void 0:t.source)||void 0===e?void 0:e.data)||void 0===n?void 0:n.hide)||(null===(i=null===(a=null==t?void 0:t.target)||void 0===a?void 0:a.data)||void 0===i?void 0:i.hide)||(null===(s=null==t?void 0:t.data)||void 0===s?void 0:s.hide)?"none":"block"}function b(t){let{start:e,end:n,color:i="black",strokeWidth:s=1,dash:r=0,markerEnd:l,markerStart:o,shapeRendering:h="auto"}=t;return a.createElement("line",{x1:e.x,x2:n.x,y1:e.y,y2:n.y,stroke:i,strokeWidth:s,strokeDasharray:r,markerEnd:l?"url(#"+l+")":"",markerStart:o?"url(#"+o+")":"",shapeRendering:h})}function S(t){return Math.floor(t)===t?0:t.toString().split(".")[1].length||0}function z(t,e){return n=>{for(let a=0;a<e.length;a++)if(void 0===t(n)[e[a]])return!1;return!0}}!function(t){let e=1/0;const n=t.length;for(let a=0;a<n;a++){const n=S(t[a]);e=n<e?n:e}}([1.12,1.14,1.21,1.2,2.3,2.12,2.14]);z((t=>t),["startPull","endPull","end"]);z((t=>t),["pull","end"]);z((t=>t),["rx","ry","xRotation","end"]);z((t=>t),["M"]);z((t=>t),["L"]);z((t=>t),["H"]),z((t=>t),["V"]);const E=Math.PI,A=2*E,C=A-1e-6;function T(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function L(){return new T}function R(t){this._context=t}function P(t){return new R(t)}T.prototype=L.prototype={constructor:T,moveTo:function(t,e){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,e){this._+="L"+(this._x1=+t)+","+(this._y1=+e)},quadraticCurveTo:function(t,e,n,a){this._+="Q"+ +t+","+ +e+","+(this._x1=+n)+","+(this._y1=+a)},bezierCurveTo:function(t,e,n,a,i,s){this._+="C"+ +t+","+ +e+","+ +n+","+ +a+","+(this._x1=+i)+","+(this._y1=+s)},arcTo:function(t,e,n,a,i){t=+t,e=+e,n=+n,a=+a,i=+i;var s=this._x1,r=this._y1,l=n-t,o=a-e,h=s-t,m=r-e,c=h*h+m*m;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=e);else if(c>1e-6)if(Math.abs(m*l-o*h)>1e-6&&i){var p=n-s,u=a-r,d=l*l+o*o,g=p*p+u*u,f=Math.sqrt(d),_=Math.sqrt(c),y=i*Math.tan((E-Math.acos((d+c-g)/(2*f*_)))/2),v=y/_,x=y/f;Math.abs(v-1)>1e-6&&(this._+="L"+(t+v*h)+","+(e+v*m)),this._+="A"+i+","+i+",0,0,"+ +(m*p>h*u)+","+(this._x1=t+x*l)+","+(this._y1=e+x*o)}else this._+="L"+(this._x1=t)+","+(this._y1=e)},arc:function(t,e,n,a,i,s){t=+t,e=+e,s=!!s;var r=(n=+n)*Math.cos(a),l=n*Math.sin(a),o=t+r,h=e+l,m=1^s,c=s?a-i:i-a;if(n<0)throw new Error("negative radius: "+n);null===this._x1?this._+="M"+o+","+h:(Math.abs(this._x1-o)>1e-6||Math.abs(this._y1-h)>1e-6)&&(this._+="L"+o+","+h),n&&(c<0&&(c=c%A+A),c>C?this._+="A"+n+","+n+",0,1,"+m+","+(t-r)+","+(e-l)+"A"+n+","+n+",0,1,"+m+","+(this._x1=o)+","+(this._y1=h):c>1e-6&&(this._+="A"+n+","+n+",0,"+ +(c>=E)+","+m+","+(this._x1=t+n*Math.cos(i))+","+(this._y1=e+n*Math.sin(i))))},rect:function(t,e,n,a){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+e)+"h"+ +n+"v"+ +a+"h"+-n+"Z"},toString:function(){return this._}},R.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,e){switch(t=+t,e=+e,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,e):this._context.moveTo(t,e);break;case 1:this._point=2;default:this._context.lineTo(t,e)}}};I(P);function O(t){this._curve=t}function I(t){function e(e){return new O(t(e))}return e._curve=t,e}O.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,e){this._curve.point(e*Math.sin(t),e*-Math.cos(t))}};function D(t,e){return null==t||null==e?NaN:t<e?-1:t>e?1:t>=e?0:NaN}function F(t,e){return null==t||null==e?NaN:e<t?-1:e>t?1:e>=t?0:NaN}function V(t){let e,n,a;function i(t,a,i,s){if(void 0===i&&(i=0),void 0===s&&(s=t.length),i<s){if(0!==e(a,a))return s;do{const e=i+s>>>1;n(t[e],a)<0?i=e+1:s=e}while(i<s)}return i}return 2!==t.length?(e=D,n=(e,n)=>D(t(e),n),a=(e,n)=>t(e)-n):(e=t===D||t===F?t:B,n=t,a=t),{left:i,center:function(t,e,n,s){void 0===n&&(n=0),void 0===s&&(s=t.length);const r=i(t,e,n,s-1);return r>n&&a(t[r-1],e)>-a(t[r],e)?r-1:r},right:function(t,a,i,s){if(void 0===i&&(i=0),void 0===s&&(s=t.length),i<s){if(0!==e(a,a))return s;do{const e=i+s>>>1;n(t[e],a)<=0?i=e+1:s=e}while(i<s)}return i}}}function B(){return 0}V(D).right;V((function(t){return null===t?NaN:+t})).center;class H extends Map{constructor(t,e){if(void 0===e&&(e=U),super(),Object.defineProperties(this,{_intern:{value:new Map},_key:{value:e}}),null!=t)for(const[n,a]of t)this.set(n,a)}get(t){return super.get(q(this,t))}has(t){return super.has(q(this,t))}set(t,e){return super.set(function(t,e){let{_intern:n,_key:a}=t;const i=a(e);return n.has(i)?n.get(i):(n.set(i,e),e)}(this,t),e)}delete(t){return super.delete(function(t,e){let{_intern:n,_key:a}=t;const i=a(e);return n.has(i)&&(e=n.get(i),n.delete(i)),e}(this,t))}}function q(t,e){let{_intern:n,_key:a}=t;const i=a(e);return n.has(i)?n.get(i):e}function U(t){return null!==t&&"object"==typeof t?t.valueOf():t}Math.sqrt(50),Math.sqrt(10),Math.sqrt(2);function W(t,e,n){t=+t,e=+e,n=(i=arguments.length)<2?(e=t,t=0,1):i<3?1:+n;for(var a=-1,i=0|Math.max(0,Math.ceil((e-t)/n)),s=new Array(i);++a<i;)s[a]=t+a*n;return s}function j(t,e){switch(arguments.length){case 0:break;case 1:this.range(t);break;default:this.range(e).domain(t)}return this}const Z=Symbol("implicit");function Y(){var t=new H,e=[],n=[],a=Z;function i(i){let s=t.get(i);if(void 0===s){if(a!==Z)return a;t.set(i,s=e.push(i)-1)}return n[s%n.length]}return i.domain=function(n){if(!arguments.length)return e.slice();e=[],t=new H;for(const a of n)t.has(a)||t.set(a,e.push(a)-1);return i},i.range=function(t){return arguments.length?(n=Array.from(t),i):n.slice()},i.unknown=function(t){return arguments.length?(a=t,i):a},i.copy=function(){return Y(e,n).unknown(a)},j.apply(i,arguments),i}function J(){var t,e,n=Y().unknown(void 0),a=n.domain,i=n.range,s=0,r=1,l=!1,o=0,h=0,m=.5;function c(){var n=a().length,c=r<s,p=c?r:s,u=c?s:r;t=(u-p)/Math.max(1,n-o+2*h),l&&(t=Math.floor(t)),p+=(u-p-t*(n-o))*m,e=t*(1-o),l&&(p=Math.round(p),e=Math.round(e));var d=W(n).map((function(e){return p+t*e}));return i(c?d.reverse():d)}return delete n.unknown,n.domain=function(t){return arguments.length?(a(t),c()):a()},n.range=function(t){return arguments.length?([s,r]=t,s=+s,r=+r,c()):[s,r]},n.rangeRound=function(t){return[s,r]=t,s=+s,r=+r,l=!0,c()},n.bandwidth=function(){return e},n.step=function(){return t},n.round=function(t){return arguments.length?(l=!!t,c()):l},n.padding=function(t){return arguments.length?(o=Math.min(1,h=+t),c()):o},n.paddingInner=function(t){return arguments.length?(o=Math.min(1,t),c()):o},n.paddingOuter=function(t){return arguments.length?(h=+t,c()):h},n.align=function(t){return arguments.length?(m=Math.max(0,Math.min(1,t)),c()):m},n.copy=function(){return J(a(),[s,r]).round(l).paddingInner(o).paddingOuter(h).align(m)},j.apply(c(),arguments)}function X(t,e,n){t.prototype=e.prototype=n,n.constructor=t}function G(t,e){var n=Object.create(t.prototype);for(var a in e)n[a]=e[a];return n}function Q(){}var $=1/.7,K="\\s*([+-]?\\d+)\\s*",tt="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",et="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",nt=/^#([0-9a-f]{3,8})$/,at=new RegExp("^rgb\\("+K+","+K+","+K+"\\)$"),it=new RegExp("^rgb\\("+et+","+et+","+et+"\\)$"),st=new RegExp("^rgba\\("+K+","+K+","+K+","+tt+"\\)$"),rt=new RegExp("^rgba\\("+et+","+et+","+et+","+tt+"\\)$"),lt=new RegExp("^hsl\\("+tt+","+et+","+et+"\\)$"),ot=new RegExp("^hsla\\("+tt+","+et+","+et+","+tt+"\\)$"),ht={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function mt(){return this.rgb().formatHex()}function ct(){return this.rgb().formatRgb()}function pt(t){var e,n;return t=(t+"").trim().toLowerCase(),(e=nt.exec(t))?(n=e[1].length,e=parseInt(e[1],16),6===n?ut(e):3===n?new _t(e>>8&15|e>>4&240,e>>4&15|240&e,(15&e)<<4|15&e,1):8===n?dt(e>>24&255,e>>16&255,e>>8&255,(255&e)/255):4===n?dt(e>>12&15|e>>8&240,e>>8&15|e>>4&240,e>>4&15|240&e,((15&e)<<4|15&e)/255):null):(e=at.exec(t))?new _t(e[1],e[2],e[3],1):(e=it.exec(t))?new _t(255*e[1]/100,255*e[2]/100,255*e[3]/100,1):(e=st.exec(t))?dt(e[1],e[2],e[3],e[4]):(e=rt.exec(t))?dt(255*e[1]/100,255*e[2]/100,255*e[3]/100,e[4]):(e=lt.exec(t))?Mt(e[1],e[2]/100,e[3]/100,1):(e=ot.exec(t))?Mt(e[1],e[2]/100,e[3]/100,e[4]):ht.hasOwnProperty(t)?ut(ht[t]):"transparent"===t?new _t(NaN,NaN,NaN,0):null}function ut(t){return new _t(t>>16&255,t>>8&255,255&t,1)}function dt(t,e,n,a){return a<=0&&(t=e=n=NaN),new _t(t,e,n,a)}function gt(t){return t instanceof Q||(t=pt(t)),t?new _t((t=t.rgb()).r,t.g,t.b,t.opacity):new _t}function ft(t,e,n,a){return 1===arguments.length?gt(t):new _t(t,e,n,null==a?1:a)}function _t(t,e,n,a){this.r=+t,this.g=+e,this.b=+n,this.opacity=+a}function yt(){return"#"+kt(this.r)+kt(this.g)+kt(this.b)}function vt(){const t=xt(this.opacity);return(1===t?"rgb(":"rgba(")+Nt(this.r)+", "+Nt(this.g)+", "+Nt(this.b)+(1===t?")":", "+t+")")}function xt(t){return isNaN(t)?1:Math.max(0,Math.min(1,t))}function Nt(t){return Math.max(0,Math.min(255,Math.round(t)||0))}function kt(t){return((t=Nt(t))<16?"0":"")+t.toString(16)}function Mt(t,e,n,a){return a<=0?t=e=n=NaN:n<=0||n>=1?t=e=NaN:e<=0&&(t=NaN),new St(t,e,n,a)}function wt(t){if(t instanceof St)return new St(t.h,t.s,t.l,t.opacity);if(t instanceof Q||(t=pt(t)),!t)return new St;if(t instanceof St)return t;var e=(t=t.rgb()).r/255,n=t.g/255,a=t.b/255,i=Math.min(e,n,a),s=Math.max(e,n,a),r=NaN,l=s-i,o=(s+i)/2;return l?(r=e===s?(n-a)/l+6*(n<a):n===s?(a-e)/l+2:(e-n)/l+4,l/=o<.5?s+i:2-s-i,r*=60):l=o>0&&o<1?0:r,new St(r,l,o,t.opacity)}function bt(t,e,n,a){return 1===arguments.length?wt(t):new St(t,e,n,null==a?1:a)}function St(t,e,n,a){this.h=+t,this.s=+e,this.l=+n,this.opacity=+a}function zt(t){return(t=(t||0)%360)<0?t+360:t}function Et(t){return Math.max(0,Math.min(1,t||0))}function At(t,e,n){return 255*(t<60?e+(n-e)*t/60:t<180?n:t<240?e+(n-e)*(240-t)/60:e)}X(Q,pt,{copy(t){return Object.assign(new this.constructor,this,t)},displayable(){return this.rgb().displayable()},hex:mt,formatHex:mt,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return wt(this).formatHsl()},formatRgb:ct,toString:ct}),X(_t,ft,G(Q,{brighter(t){return t=null==t?$:Math.pow($,t),new _t(this.r*t,this.g*t,this.b*t,this.opacity)},darker(t){return t=null==t?.7:Math.pow(.7,t),new _t(this.r*t,this.g*t,this.b*t,this.opacity)},rgb(){return this},clamp(){return new _t(Nt(this.r),Nt(this.g),Nt(this.b),xt(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:yt,formatHex:yt,formatHex8:function(){return"#"+kt(this.r)+kt(this.g)+kt(this.b)+kt(255*(isNaN(this.opacity)?1:this.opacity))},formatRgb:vt,toString:vt})),X(St,bt,G(Q,{brighter(t){return t=null==t?$:Math.pow($,t),new St(this.h,this.s,this.l*t,this.opacity)},darker(t){return t=null==t?.7:Math.pow(.7,t),new St(this.h,this.s,this.l*t,this.opacity)},rgb(){var t=this.h%360+360*(this.h<0),e=isNaN(t)||isNaN(this.s)?0:this.s,n=this.l,a=n+(n<.5?n:1-n)*e,i=2*n-a;return new _t(At(t>=240?t-240:t+120,i,a),At(t,i,a),At(t<120?t+240:t-120,i,a),this.opacity)},clamp(){return new St(zt(this.h),Et(this.s),Et(this.l),xt(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const t=xt(this.opacity);return(1===t?"hsl(":"hsla(")+zt(this.h)+", "+100*Et(this.s)+"%, "+100*Et(this.l)+"%"+(1===t?")":", "+t+")")}}));var Ct=t=>()=>t;function Tt(t,e){var n=e-t;return n?function(t,e){return function(n){return t+n*e}}(t,n):Ct(isNaN(t)?e:t)}(function t(e){var n=function(t){return 1==(t=+t)?Tt:function(e,n){return n-e?function(t,e,n){return t=Math.pow(t,n),e=Math.pow(e,n)-t,n=1/n,function(a){return Math.pow(t+a*e,n)}}(e,n,t):Ct(isNaN(e)?n:e)}}(e);function a(t,e){var a=n((t=ft(t)).r,(e=ft(e)).r),i=n(t.g,e.g),s=n(t.b,e.b),r=Tt(t.opacity,e.opacity);return function(e){return t.r=a(e),t.g=i(e),t.b=s(e),t.opacity=r(e),t+""}}return a.gamma=t,a})(1);var Lt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;new RegExp(Lt.source,"g");function Rt(t,e){if((n=(t=e?t.toExponential(e-1):t.toExponential()).indexOf("e"))<0)return null;var n,a=t.slice(0,n);return[a.length>1?a[0]+a.slice(2):a,+t.slice(n+1)]}function Pt(t){return(t=Rt(Math.abs(t)))?t[1]:NaN}var Ot,It=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function Dt(t){if(!(e=It.exec(t)))throw new Error("invalid format: "+t);var e;return new Ft({fill:e[1],align:e[2],sign:e[3],symbol:e[4],zero:e[5],width:e[6],comma:e[7],precision:e[8]&&e[8].slice(1),trim:e[9],type:e[10]})}function Ft(t){this.fill=void 0===t.fill?" ":t.fill+"",this.align=void 0===t.align?">":t.align+"",this.sign=void 0===t.sign?"-":t.sign+"",this.symbol=void 0===t.symbol?"":t.symbol+"",this.zero=!!t.zero,this.width=void 0===t.width?void 0:+t.width,this.comma=!!t.comma,this.precision=void 0===t.precision?void 0:+t.precision,this.trim=!!t.trim,this.type=void 0===t.type?"":t.type+""}function Vt(t,e){var n=Rt(t,e);if(!n)return t+"";var a=n[0],i=n[1];return i<0?"0."+new Array(-i).join("0")+a:a.length>i+1?a.slice(0,i+1)+"."+a.slice(i+1):a+new Array(i-a.length+2).join("0")}Dt.prototype=Ft.prototype,Ft.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(void 0===this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(void 0===this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var Bt={"%":(t,e)=>(100*t).toFixed(e),b:t=>Math.round(t).toString(2),c:t=>t+"",d:function(t){return Math.abs(t=Math.round(t))>=1e21?t.toLocaleString("en").replace(/,/g,""):t.toString(10)},e:(t,e)=>t.toExponential(e),f:(t,e)=>t.toFixed(e),g:(t,e)=>t.toPrecision(e),o:t=>Math.round(t).toString(8),p:(t,e)=>Vt(100*t,e),r:Vt,s:function(t,e){var n=Rt(t,e);if(!n)return t+"";var a=n[0],i=n[1],s=i-(Ot=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,r=a.length;return s===r?a:s>r?a+new Array(s-r+1).join("0"):s>0?a.slice(0,s)+"."+a.slice(s):"0."+new Array(1-s).join("0")+Rt(t,Math.max(0,e+s-1))[0]},X:t=>Math.round(t).toString(16).toUpperCase(),x:t=>Math.round(t).toString(16)};function Ht(t){return t}var qt,Ut=Array.prototype.map,Wt=["y","z","a","f","p","n","\xb5","m","","k","M","G","T","P","E","Z","Y"];qt=function(t){var e,n,a=void 0===t.grouping||void 0===t.thousands?Ht:(e=Ut.call(t.grouping,Number),n=t.thousands+"",function(t,a){for(var i=t.length,s=[],r=0,l=e[0],o=0;i>0&&l>0&&(o+l+1>a&&(l=Math.max(1,a-o)),s.push(t.substring(i-=l,i+l)),!((o+=l+1)>a));)l=e[r=(r+1)%e.length];return s.reverse().join(n)}),i=void 0===t.currency?"":t.currency[0]+"",s=void 0===t.currency?"":t.currency[1]+"",r=void 0===t.decimal?".":t.decimal+"",l=void 0===t.numerals?Ht:function(t){return function(e){return e.replace(/[0-9]/g,(function(e){return t[+e]}))}}(Ut.call(t.numerals,String)),o=void 0===t.percent?"%":t.percent+"",h=void 0===t.minus?"\u2212":t.minus+"",m=void 0===t.nan?"NaN":t.nan+"";function c(t){var e=(t=Dt(t)).fill,n=t.align,c=t.sign,p=t.symbol,u=t.zero,d=t.width,g=t.comma,f=t.precision,_=t.trim,y=t.type;"n"===y?(g=!0,y="g"):Bt[y]||(void 0===f&&(f=12),_=!0,y="g"),(u||"0"===e&&"="===n)&&(u=!0,e="0",n="=");var v="$"===p?i:"#"===p&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",x="$"===p?s:/[%p]/.test(y)?o:"",N=Bt[y],k=/[defgprs%]/.test(y);function M(t){var i,s,o,p=v,M=x;if("c"===y)M=N(t)+M,t="";else{var w=(t=+t)<0||1/t<0;if(t=isNaN(t)?m:N(Math.abs(t),f),_&&(t=function(t){t:for(var e,n=t.length,a=1,i=-1;a<n;++a)switch(t[a]){case".":i=e=a;break;case"0":0===i&&(i=a),e=a;break;default:if(!+t[a])break t;i>0&&(i=0)}return i>0?t.slice(0,i)+t.slice(e+1):t}(t)),w&&0==+t&&"+"!==c&&(w=!1),p=(w?"("===c?c:h:"-"===c||"("===c?"":c)+p,M=("s"===y?Wt[8+Ot/3]:"")+M+(w&&"("===c?")":""),k)for(i=-1,s=t.length;++i<s;)if(48>(o=t.charCodeAt(i))||o>57){M=(46===o?r+t.slice(i+1):t.slice(i))+M,t=t.slice(0,i);break}}g&&!u&&(t=a(t,1/0));var b=p.length+t.length+M.length,S=b<d?new Array(d-b+1).join(e):"";switch(g&&u&&(t=a(S+t,S.length?d-M.length:1/0),S=""),n){case"<":t=p+t+M+S;break;case"=":t=p+S+t+M;break;case"^":t=S.slice(0,b=S.length>>1)+p+t+M+S.slice(b);break;default:t=S+p+t+M}return l(t)}return f=void 0===f?6:/[gprs]/.test(y)?Math.max(1,Math.min(21,f)):Math.max(0,Math.min(20,f)),M.toString=function(){return t+""},M}return{format:c,formatPrefix:function(t,e){var n=c(((t=Dt(t)).type="f",t)),a=3*Math.max(-8,Math.min(8,Math.floor(Pt(e)/3))),i=Math.pow(10,-a),s=Wt[8+a/3];return function(t){return n(i*t)+s}}}}({thousands:",",grouping:[3],currency:["$",""]}),qt.format,qt.formatPrefix;class jt{addEventListener(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)}hasEventListener(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)}removeEventListener(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}dispatchEvent(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,a=n.length;e<a;e++)n[e].call(this,t);t.target=null}}}const Zt=[];for(let $a=0;$a<256;$a++)Zt[$a]=($a<16?"0":"")+$a.toString(16);function Yt(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,a=4294967295*Math.random()|0;return(Zt[255&t]+Zt[t>>8&255]+Zt[t>>16&255]+Zt[t>>24&255]+"-"+Zt[255&e]+Zt[e>>8&255]+"-"+Zt[e>>16&15|64]+Zt[e>>24&255]+"-"+Zt[63&n|128]+Zt[n>>8&255]+"-"+Zt[n>>16&255]+Zt[n>>24&255]+Zt[255&a]+Zt[a>>8&255]+Zt[a>>16&255]+Zt[a>>24&255]).toLowerCase()}function Jt(t,e,n){return Math.max(e,Math.min(n,t))}function Xt(t,e,n){return(1-n)*t+n*e}class Gt{constructor(t,e){void 0===t&&(t=0),void 0===e&&(e=0),this.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,a=t.elements;return this.x=a[0]*e+a[3]*n+a[6],this.y=a[1]*e+a[4]*n+a[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),a=Math.sin(e),i=this.x-t.x,s=this.y-t.y;return this.x=i*n-s*a+t.x,this.y=i*a+s*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Qt{constructor(){this.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,a,i,s,r,l,o){const h=this.elements;return h[0]=t,h[1]=a,h[2]=r,h[3]=e,h[4]=i,h[5]=l,h[6]=n,h[7]=s,h[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,a=e.elements,i=this.elements,s=n[0],r=n[3],l=n[6],o=n[1],h=n[4],m=n[7],c=n[2],p=n[5],u=n[8],d=a[0],g=a[3],f=a[6],_=a[1],y=a[4],v=a[7],x=a[2],N=a[5],k=a[8];return i[0]=s*d+r*_+l*x,i[3]=s*g+r*y+l*N,i[6]=s*f+r*v+l*k,i[1]=o*d+h*_+m*x,i[4]=o*g+h*y+m*N,i[7]=o*f+h*v+m*k,i[2]=c*d+p*_+u*x,i[5]=c*g+p*y+u*N,i[8]=c*f+p*v+u*k,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],a=t[2],i=t[3],s=t[4],r=t[5],l=t[6],o=t[7],h=t[8];return e*s*h-e*r*o-n*i*h+n*r*l+a*i*o-a*s*l}invert(){const t=this.elements,e=t[0],n=t[1],a=t[2],i=t[3],s=t[4],r=t[5],l=t[6],o=t[7],h=t[8],m=h*s-r*o,c=r*l-h*i,p=o*i-s*l,u=e*m+n*c+a*p;if(0===u)return this.set(0,0,0,0,0,0,0,0,0);const d=1/u;return t[0]=m*d,t[1]=(a*o-h*n)*d,t[2]=(r*n-a*s)*d,t[3]=c*d,t[4]=(h*e-a*l)*d,t[5]=(a*i-r*e)*d,t[6]=p*d,t[7]=(n*l-o*e)*d,t[8]=(s*e-n*i)*d,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,a,i,s,r){const l=Math.cos(i),o=Math.sin(i);return this.set(n*l,n*o,-n*(l*s+o*r)+s+t,-a*o,a*l,-a*(-o*s+l*r)+r+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),a=this.elements,i=a[0],s=a[3],r=a[6],l=a[1],o=a[4],h=a[7];return a[0]=e*i+n*l,a[3]=e*s+n*o,a[6]=e*r+n*h,a[1]=-n*i+e*l,a[4]=-n*s+e*o,a[7]=-n*r+e*h,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let a=0;a<9;a++)if(e[a]!==n[a])return!1;return!0}fromArray(t,e){void 0===e&&(e=0);for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return(new this.constructor).fromArray(this.elements)}}function $t(t){return document.createElementNS("http://www.w3.org/1999/xhtml",t)}function Kt(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function te(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}const ee={srgb:{"srgb-linear":Kt},"srgb-linear":{srgb:te}},ne={legacyMode:!0,get workingColorSpace(){return"srgb-linear"},set workingColorSpace(t){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(t,e,n){if(this.legacyMode||e===n||!e||!n)return t;if(ee[e]&&void 0!==ee[e][n]){const a=ee[e][n];return t.r=a(t.r),t.g=a(t.g),t.b=a(t.b),t}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(t,e){return this.convert(t,this.workingColorSpace,e)},toWorkingColorSpace:function(t,e){return this.convert(t,e,this.workingColorSpace)}},ae={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ie={r:0,g:0,b:0},se={h:0,s:0,l:0},re={h:0,s:0,l:0};function le(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function oe(t,e){return e.r=t.r,e.g=t.g,e.b=t.b,e}class he{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e){return void 0===e&&(e="srgb"),t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,ne.toWorkingColorSpace(this,e),this}setRGB(t,e,n,a){return void 0===a&&(a="srgb-linear"),this.r=t,this.g=e,this.b=n,ne.toWorkingColorSpace(this,a),this}setHSL(t,e,n,a){if(void 0===a&&(a="srgb-linear"),t=function(t,e){return(t%1+1)%1}(t),e=Jt(e,0,1),n=Jt(n,0,1),0===e)this.r=this.g=this.b=n;else{const a=n<=.5?n*(1+e):n+e-n*e,i=2*n-a;this.r=le(i,a,t+1/3),this.g=le(i,a,t),this.b=le(i,a,t-1/3)}return ne.toWorkingColorSpace(this,a),this}setStyle(t,e){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let a;if(void 0===e&&(e="srgb"),a=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let t;const i=a[1],s=a[2];switch(i){case"rgb":case"rgba":if(t=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,ne.toWorkingColorSpace(this,e),n(t[4]),this;if(t=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,ne.toWorkingColorSpace(this,e),n(t[4]),this;break;case"hsl":case"hsla":if(t=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s)){const a=parseFloat(t[1])/360,i=parseInt(t[2],10)/100,s=parseInt(t[3],10)/100;return n(t[4]),this.setHSL(a,i,s,e)}}}else if(a=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=a[1],n=t.length;if(3===n)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,ne.toWorkingColorSpace(this,e),this;if(6===n)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,ne.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e){void 0===e&&(e="srgb");const n=ae[t.toLowerCase()];return void 0!==n?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Kt(t.r),this.g=Kt(t.g),this.b=Kt(t.b),this}copyLinearToSRGB(t){return this.r=te(t.r),this.g=te(t.g),this.b=te(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t){return void 0===t&&(t="srgb"),ne.fromWorkingColorSpace(oe(this,ie),t),Jt(255*ie.r,0,255)<<16^Jt(255*ie.g,0,255)<<8^Jt(255*ie.b,0,255)<<0}getHexString(t){return void 0===t&&(t="srgb"),("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e){void 0===e&&(e="srgb-linear"),ne.fromWorkingColorSpace(oe(this,ie),e);const n=ie.r,a=ie.g,i=ie.b,s=Math.max(n,a,i),r=Math.min(n,a,i);let l,o;const h=(r+s)/2;if(r===s)l=0,o=0;else{const t=s-r;switch(o=h<=.5?t/(s+r):t/(2-s-r),s){case n:l=(a-i)/t+(a<i?6:0);break;case a:l=(i-n)/t+2;break;case i:l=(n-a)/t+4}l/=6}return t.h=l,t.s=o,t.l=h,t}getRGB(t,e){return void 0===e&&(e="srgb-linear"),ne.fromWorkingColorSpace(oe(this,ie),e),t.r=ie.r,t.g=ie.g,t.b=ie.b,t}getStyle(t){return void 0===t&&(t="srgb"),ne.fromWorkingColorSpace(oe(this,ie),t),"srgb"!==t?"color("+t+" "+ie.r+" "+ie.g+" "+ie.b+")":"rgb("+(255*ie.r|0)+","+(255*ie.g|0)+","+(255*ie.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(se),se.h+=t,se.s+=e,se.l+=n,this.setHSL(se.h,se.s,se.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(se),t.getHSL(re);const n=Xt(se.h,re.h,e),a=Xt(se.s,re.s,e),i=Xt(se.l,re.l,e);return this.setHSL(n,a,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}let me;he.NAMES=ae;class ce{constructor(t){void 0===t&&(t=null),this.isSource=!0,this.uuid=Yt(),this.data=t,this.version=0}set needsUpdate(t){!0===t&&this.version++}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.images[this.uuid])return t.images[this.uuid];const n={uuid:this.uuid,url:""},a=this.data;if(null!==a){let t;if(Array.isArray(a)){t=[];for(let e=0,n=a.length;e<n;e++)a[e].isDataTexture?t.push(pe(a[e].image)):t.push(pe(a[e]))}else t=pe(a);n.url=t}return e||(t.images[this.uuid]=n),n}}function pe(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?class{static getDataURL(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===me&&(me=$t("canvas")),me.width=t.width,me.height=t.height;const n=me.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=me}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const e=$t("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const a=n.getImageData(0,0,t.width,t.height),i=a.data;for(let t=0;t<i.length;t++)i[t]=255*Kt(i[t]/255);return n.putImageData(a,0,0),e}if(t.data){const e=t.data.slice(0);for(let t=0;t<e.length;t++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[t]=Math.floor(255*Kt(e[t]/255)):e[t]=Kt(e[t]);return{data:e,width:t.width,height:t.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ue=0;class de extends jt{constructor(t,e,n,a,i,s,r,l,o,h){void 0===t&&(t=de.DEFAULT_IMAGE),void 0===e&&(e=de.DEFAULT_MAPPING),void 0===n&&(n=1001),void 0===a&&(a=1001),void 0===i&&(i=1006),void 0===s&&(s=1008),void 0===r&&(r=1023),void 0===l&&(l=1009),void 0===o&&(o=1),void 0===h&&(h=3e3),super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ue++}),this.uuid=Yt(),this.name="",this.source=new ce(t),this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=a,this.magFilter=i,this.minFilter=s,this.anisotropy=o,this.format=r,this.internalFormat=null,this.type=l,this.offset=new Gt(0,0),this.repeat=new Gt(1,1),this.center=new Gt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Qt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case 1e3:t.x=t.x-Math.floor(t.x);break;case 1001:t.x=t.x<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case 1e3:t.y=t.y-Math.floor(t.y);break;case 1001:t.y=t.y<0?0:1;break;case 1002:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){!0===t&&(this.version++,this.source.needsUpdate=!0)}}de.DEFAULT_IMAGE=null,de.DEFAULT_MAPPING=300;Symbol.iterator;class ge{constructor(t,e,n,a){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===a&&(a=1),this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=a}static slerp(t,e,n,a){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(t,e,a)}static slerpFlat(t,e,n,a,i,s,r){let l=n[a+0],o=n[a+1],h=n[a+2],m=n[a+3];const c=i[s+0],p=i[s+1],u=i[s+2],d=i[s+3];if(0===r)return t[e+0]=l,t[e+1]=o,t[e+2]=h,void(t[e+3]=m);if(1===r)return t[e+0]=c,t[e+1]=p,t[e+2]=u,void(t[e+3]=d);if(m!==d||l!==c||o!==p||h!==u){let t=1-r;const e=l*c+o*p+h*u+m*d,n=e>=0?1:-1,a=1-e*e;if(a>Number.EPSILON){const i=Math.sqrt(a),s=Math.atan2(i,e*n);t=Math.sin(t*s)/i,r=Math.sin(r*s)/i}const i=r*n;if(l=l*t+c*i,o=o*t+p*i,h=h*t+u*i,m=m*t+d*i,t===1-r){const t=1/Math.sqrt(l*l+o*o+h*h+m*m);l*=t,o*=t,h*=t,m*=t}}t[e]=l,t[e+1]=o,t[e+2]=h,t[e+3]=m}static multiplyQuaternionsFlat(t,e,n,a,i,s){const r=n[a],l=n[a+1],o=n[a+2],h=n[a+3],m=i[s],c=i[s+1],p=i[s+2],u=i[s+3];return t[e]=r*u+h*m+l*p-o*c,t[e+1]=l*u+h*c+o*m-r*p,t[e+2]=o*u+h*p+r*c-l*m,t[e+3]=h*u-r*m-l*c-o*p,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,a){return this._x=t,this._y=e,this._z=n,this._w=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,a=t._y,i=t._z,s=t._order,r=Math.cos,l=Math.sin,o=r(n/2),h=r(a/2),m=r(i/2),c=l(n/2),p=l(a/2),u=l(i/2);switch(s){case"XYZ":this._x=c*h*m+o*p*u,this._y=o*p*m-c*h*u,this._z=o*h*u+c*p*m,this._w=o*h*m-c*p*u;break;case"YXZ":this._x=c*h*m+o*p*u,this._y=o*p*m-c*h*u,this._z=o*h*u-c*p*m,this._w=o*h*m+c*p*u;break;case"ZXY":this._x=c*h*m-o*p*u,this._y=o*p*m+c*h*u,this._z=o*h*u+c*p*m,this._w=o*h*m-c*p*u;break;case"ZYX":this._x=c*h*m-o*p*u,this._y=o*p*m+c*h*u,this._z=o*h*u-c*p*m,this._w=o*h*m+c*p*u;break;case"YZX":this._x=c*h*m+o*p*u,this._y=o*p*m+c*h*u,this._z=o*h*u-c*p*m,this._w=o*h*m-c*p*u;break;case"XZY":this._x=c*h*m-o*p*u,this._y=o*p*m-c*h*u,this._z=o*h*u+c*p*m,this._w=o*h*m+c*p*u;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,a=Math.sin(n);return this._x=t.x*a,this._y=t.y*a,this._z=t.z*a,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],a=e[4],i=e[8],s=e[1],r=e[5],l=e[9],o=e[2],h=e[6],m=e[10],c=n+r+m;if(c>0){const t=.5/Math.sqrt(c+1);this._w=.25/t,this._x=(h-l)*t,this._y=(i-o)*t,this._z=(s-a)*t}else if(n>r&&n>m){const t=2*Math.sqrt(1+n-r-m);this._w=(h-l)/t,this._x=.25*t,this._y=(a+s)/t,this._z=(i+o)/t}else if(r>m){const t=2*Math.sqrt(1+r-n-m);this._w=(i-o)/t,this._x=(a+s)/t,this._y=.25*t,this._z=(l+h)/t}else{const t=2*Math.sqrt(1+m-n-r);this._w=(s-a)/t,this._x=(i+o)/t,this._y=(l+h)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Jt(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const a=Math.min(1,e/n);return this.slerp(t,a),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,a=t._y,i=t._z,s=t._w,r=e._x,l=e._y,o=e._z,h=e._w;return this._x=n*h+s*r+a*o-i*l,this._y=a*h+s*l+i*r-n*o,this._z=i*h+s*o+n*l-a*r,this._w=s*h-n*r-a*l-i*o,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,a=this._y,i=this._z,s=this._w;let r=s*t._w+n*t._x+a*t._y+i*t._z;if(r<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,r=-r):this.copy(t),r>=1)return this._w=s,this._x=n,this._y=a,this._z=i,this;const l=1-r*r;if(l<=Number.EPSILON){const t=1-e;return this._w=t*s+e*this._w,this._x=t*n+e*this._x,this._y=t*a+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const o=Math.sqrt(l),h=Math.atan2(o,r),m=Math.sin((1-e)*h)/o,c=Math.sin(e*h)/o;return this._w=s*m+this._w*c,this._x=n*m+this._x*c,this._y=a*m+this._y*c,this._z=i*m+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=Math.random(),e=Math.sqrt(1-t),n=Math.sqrt(t),a=2*Math.PI*Math.random(),i=2*Math.PI*Math.random();return this.set(e*Math.cos(a),n*Math.sin(i),n*Math.cos(i),e*Math.sin(a))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class fe{constructor(t,e,n){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),this.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(ye.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(ye.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,a=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*a,this.y=i[1]*e+i[4]*n+i[7]*a,this.z=i[2]*e+i[5]*n+i[8]*a,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,a=this.z,i=t.elements,s=1/(i[3]*e+i[7]*n+i[11]*a+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*a+i[12])*s,this.y=(i[1]*e+i[5]*n+i[9]*a+i[13])*s,this.z=(i[2]*e+i[6]*n+i[10]*a+i[14])*s,this}applyQuaternion(t){const e=this.x,n=this.y,a=this.z,i=t.x,s=t.y,r=t.z,l=t.w,o=l*e+s*a-r*n,h=l*n+r*e-i*a,m=l*a+i*n-s*e,c=-i*e-s*n-r*a;return this.x=o*l+c*-i+h*-r-m*-s,this.y=h*l+c*-s+m*-i-o*-r,this.z=m*l+c*-r+o*-s-h*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,a=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*a,this.y=i[1]*e+i[5]*n+i[9]*a,this.z=i[2]*e+i[6]*n+i[10]*a,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,a=t.y,i=t.z,s=e.x,r=e.y,l=e.z;return this.x=a*l-i*r,this.y=i*s-n*l,this.z=n*r-a*s,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return _e.copy(this).projectOnVector(t),this.sub(_e)}reflect(t){return this.sub(_e.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Jt(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,a=this.z-t.z;return e*e+n*n+a*a}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const a=Math.sin(e)*t;return this.x=a*Math.sin(n),this.y=Math.cos(e)*t,this.z=a*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),a=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=a,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=2*(Math.random()-.5),e=Math.random()*Math.PI*2,n=Math.sqrt(1-t**2);return this.x=n*Math.cos(e),this.y=n*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const _e=new fe,ye=new ge;class ve{constructor(t,e){void 0===t&&(t=new fe(1/0,1/0,1/0)),void 0===e&&(e=new fe(-1/0,-1/0,-1/0)),this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,a=1/0,i=-1/0,s=-1/0,r=-1/0;for(let l=0,o=t.length;l<o;l+=3){const o=t[l],h=t[l+1],m=t[l+2];o<e&&(e=o),h<n&&(n=h),m<a&&(a=m),o>i&&(i=o),h>s&&(s=h),m>r&&(r=m)}return this.min.set(e,n,a),this.max.set(i,s,r),this}setFromBufferAttribute(t){let e=1/0,n=1/0,a=1/0,i=-1/0,s=-1/0,r=-1/0;for(let l=0,o=t.count;l<o;l++){const o=t.getX(l),h=t.getY(l),m=t.getZ(l);o<e&&(e=o),h<n&&(n=h),m<a&&(a=m),o>i&&(i=o),h>s&&(s=h),m>r&&(r=m)}return this.min.set(e,n,a),this.max.set(i,s,r),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Ne.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e){return void 0===e&&(e=!1),this.makeEmpty(),this.expandByObject(t,e)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e){void 0===e&&(e=!1),t.updateWorldMatrix(!1,!1);const n=t.geometry;if(void 0!==n)if(e&&null!=n.attributes&&void 0!==n.attributes.position){const e=n.attributes.position;for(let n=0,a=e.count;n<a;n++)Ne.fromBufferAttribute(e,n).applyMatrix4(t.matrixWorld),this.expandByPoint(Ne)}else null===n.boundingBox&&n.computeBoundingBox(),ke.copy(n.boundingBox),ke.applyMatrix4(t.matrixWorld),this.union(ke);const a=t.children;for(let i=0,s=a.length;i<s;i++)this.expandByObject(a[i],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Ne),Ne.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ae),Ce.subVectors(this.max,Ae),Me.subVectors(t.a,Ae),we.subVectors(t.b,Ae),be.subVectors(t.c,Ae),Se.subVectors(we,Me),ze.subVectors(be,we),Ee.subVectors(Me,be);let e=[0,-Se.z,Se.y,0,-ze.z,ze.y,0,-Ee.z,Ee.y,Se.z,0,-Se.x,ze.z,0,-ze.x,Ee.z,0,-Ee.x,-Se.y,Se.x,0,-ze.y,ze.x,0,-Ee.y,Ee.x,0];return!!Re(e,Me,we,be,Ce)&&(e=[1,0,0,0,1,0,0,0,1],!!Re(e,Me,we,be,Ce)&&(Te.crossVectors(Se,ze),e=[Te.x,Te.y,Te.z],Re(e,Me,we,be,Ce)))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Ne.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=.5*this.getSize(Ne).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(xe[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),xe[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),xe[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),xe[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),xe[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),xe[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),xe[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),xe[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(xe)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const xe=[new fe,new fe,new fe,new fe,new fe,new fe,new fe,new fe],Ne=new fe,ke=new ve,Me=new fe,we=new fe,be=new fe,Se=new fe,ze=new fe,Ee=new fe,Ae=new fe,Ce=new fe,Te=new fe,Le=new fe;function Re(t,e,n,a,i){for(let s=0,r=t.length-3;s<=r;s+=3){Le.fromArray(t,s);const r=i.x*Math.abs(Le.x)+i.y*Math.abs(Le.y)+i.z*Math.abs(Le.z),l=e.dot(Le),o=n.dot(Le),h=a.dot(Le);if(Math.max(-Math.max(l,o,h),Math.min(l,o,h))>r)return!1}return!0}const Pe=new ve,Oe=new fe,Ie=new fe,De=new fe;class Fe{constructor(t,e){void 0===t&&(t=new fe),void 0===e&&(e=-1),this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Pe.setFromPoints(t).getCenter(n);let a=0;for(let i=0,s=t.length;i<s;i++)a=Math.max(a,n.distanceToSquared(t[i]));return this.radius=Math.sqrt(a),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){De.subVectors(t,this.center);const e=De.lengthSq();if(e>this.radius*this.radius){const t=Math.sqrt(e),n=.5*(t-this.radius);this.center.add(De.multiplyScalar(n/t)),this.radius+=n}return this}union(t){return!0===this.center.equals(t.center)?Ie.set(0,0,1).multiplyScalar(t.radius):Ie.subVectors(t.center,this.center).normalize().multiplyScalar(t.radius),this.expandByPoint(Oe.copy(t.center).add(Ie)),this.expandByPoint(Oe.copy(t.center).sub(Ie)),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Ve=new fe,Be=new fe,He=new fe,qe=new fe,Ue=new fe,We=new fe,je=new fe;class Ze{constructor(){this.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,a,i,s,r,l,o,h,m,c,p,u,d,g){const f=this.elements;return f[0]=t,f[4]=e,f[8]=n,f[12]=a,f[1]=i,f[5]=s,f[9]=r,f[13]=l,f[2]=o,f[6]=h,f[10]=m,f[14]=c,f[3]=p,f[7]=u,f[11]=d,f[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Ze).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,a=1/Ye.setFromMatrixColumn(t,0).length(),i=1/Ye.setFromMatrixColumn(t,1).length(),s=1/Ye.setFromMatrixColumn(t,2).length();return e[0]=n[0]*a,e[1]=n[1]*a,e[2]=n[2]*a,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*s,e[9]=n[9]*s,e[10]=n[10]*s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,a=t.y,i=t.z,s=Math.cos(n),r=Math.sin(n),l=Math.cos(a),o=Math.sin(a),h=Math.cos(i),m=Math.sin(i);if("XYZ"===t.order){const t=s*h,n=s*m,a=r*h,i=r*m;e[0]=l*h,e[4]=-l*m,e[8]=o,e[1]=n+a*o,e[5]=t-i*o,e[9]=-r*l,e[2]=i-t*o,e[6]=a+n*o,e[10]=s*l}else if("YXZ"===t.order){const t=l*h,n=l*m,a=o*h,i=o*m;e[0]=t+i*r,e[4]=a*r-n,e[8]=s*o,e[1]=s*m,e[5]=s*h,e[9]=-r,e[2]=n*r-a,e[6]=i+t*r,e[10]=s*l}else if("ZXY"===t.order){const t=l*h,n=l*m,a=o*h,i=o*m;e[0]=t-i*r,e[4]=-s*m,e[8]=a+n*r,e[1]=n+a*r,e[5]=s*h,e[9]=i-t*r,e[2]=-s*o,e[6]=r,e[10]=s*l}else if("ZYX"===t.order){const t=s*h,n=s*m,a=r*h,i=r*m;e[0]=l*h,e[4]=a*o-n,e[8]=t*o+i,e[1]=l*m,e[5]=i*o+t,e[9]=n*o-a,e[2]=-o,e[6]=r*l,e[10]=s*l}else if("YZX"===t.order){const t=s*l,n=s*o,a=r*l,i=r*o;e[0]=l*h,e[4]=i-t*m,e[8]=a*m+n,e[1]=m,e[5]=s*h,e[9]=-r*h,e[2]=-o*h,e[6]=n*m+a,e[10]=t-i*m}else if("XZY"===t.order){const t=s*l,n=s*o,a=r*l,i=r*o;e[0]=l*h,e[4]=-m,e[8]=o*h,e[1]=t*m+i,e[5]=s*h,e[9]=n*m-a,e[2]=a*m-n,e[6]=r*h,e[10]=i*m+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Xe,t,Ge)}lookAt(t,e,n){const a=this.elements;return Ke.subVectors(t,e),0===Ke.lengthSq()&&(Ke.z=1),Ke.normalize(),Qe.crossVectors(n,Ke),0===Qe.lengthSq()&&(1===Math.abs(n.z)?Ke.x+=1e-4:Ke.z+=1e-4,Ke.normalize(),Qe.crossVectors(n,Ke)),Qe.normalize(),$e.crossVectors(Ke,Qe),a[0]=Qe.x,a[4]=$e.x,a[8]=Ke.x,a[1]=Qe.y,a[5]=$e.y,a[9]=Ke.y,a[2]=Qe.z,a[6]=$e.z,a[10]=Ke.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,a=e.elements,i=this.elements,s=n[0],r=n[4],l=n[8],o=n[12],h=n[1],m=n[5],c=n[9],p=n[13],u=n[2],d=n[6],g=n[10],f=n[14],_=n[3],y=n[7],v=n[11],x=n[15],N=a[0],k=a[4],M=a[8],w=a[12],b=a[1],S=a[5],z=a[9],E=a[13],A=a[2],C=a[6],T=a[10],L=a[14],R=a[3],P=a[7],O=a[11],I=a[15];return i[0]=s*N+r*b+l*A+o*R,i[4]=s*k+r*S+l*C+o*P,i[8]=s*M+r*z+l*T+o*O,i[12]=s*w+r*E+l*L+o*I,i[1]=h*N+m*b+c*A+p*R,i[5]=h*k+m*S+c*C+p*P,i[9]=h*M+m*z+c*T+p*O,i[13]=h*w+m*E+c*L+p*I,i[2]=u*N+d*b+g*A+f*R,i[6]=u*k+d*S+g*C+f*P,i[10]=u*M+d*z+g*T+f*O,i[14]=u*w+d*E+g*L+f*I,i[3]=_*N+y*b+v*A+x*R,i[7]=_*k+y*S+v*C+x*P,i[11]=_*M+y*z+v*T+x*O,i[15]=_*w+y*E+v*L+x*I,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],a=t[8],i=t[12],s=t[1],r=t[5],l=t[9],o=t[13],h=t[2],m=t[6],c=t[10],p=t[14];return t[3]*(+i*l*m-a*o*m-i*r*c+n*o*c+a*r*p-n*l*p)+t[7]*(+e*l*p-e*o*c+i*s*c-a*s*p+a*o*h-i*l*h)+t[11]*(+e*o*m-e*r*p-i*s*m+n*s*p+i*r*h-n*o*h)+t[15]*(-a*r*h-e*l*m+e*r*c+a*s*m-n*s*c+n*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const a=this.elements;return t.isVector3?(a[12]=t.x,a[13]=t.y,a[14]=t.z):(a[12]=t,a[13]=e,a[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],a=t[2],i=t[3],s=t[4],r=t[5],l=t[6],o=t[7],h=t[8],m=t[9],c=t[10],p=t[11],u=t[12],d=t[13],g=t[14],f=t[15],_=m*g*o-d*c*o+d*l*p-r*g*p-m*l*f+r*c*f,y=u*c*o-h*g*o-u*l*p+s*g*p+h*l*f-s*c*f,v=h*d*o-u*m*o+u*r*p-s*d*p-h*r*f+s*m*f,x=u*m*l-h*d*l-u*r*c+s*d*c+h*r*g-s*m*g,N=e*_+n*y+a*v+i*x;if(0===N)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const k=1/N;return t[0]=_*k,t[1]=(d*c*i-m*g*i-d*a*p+n*g*p+m*a*f-n*c*f)*k,t[2]=(r*g*i-d*l*i+d*a*o-n*g*o-r*a*f+n*l*f)*k,t[3]=(m*l*i-r*c*i-m*a*o+n*c*o+r*a*p-n*l*p)*k,t[4]=y*k,t[5]=(h*g*i-u*c*i+u*a*p-e*g*p-h*a*f+e*c*f)*k,t[6]=(u*l*i-s*g*i-u*a*o+e*g*o+s*a*f-e*l*f)*k,t[7]=(s*c*i-h*l*i+h*a*o-e*c*o-s*a*p+e*l*p)*k,t[8]=v*k,t[9]=(u*m*i-h*d*i-u*n*p+e*d*p+h*n*f-e*m*f)*k,t[10]=(s*d*i-u*r*i+u*n*o-e*d*o-s*n*f+e*r*f)*k,t[11]=(h*r*i-s*m*i-h*n*o+e*m*o+s*n*p-e*r*p)*k,t[12]=x*k,t[13]=(h*d*a-u*m*a+u*n*c-e*d*c-h*n*g+e*m*g)*k,t[14]=(u*r*a-s*d*a-u*n*l+e*d*l+s*n*g-e*r*g)*k,t[15]=(s*m*a-h*r*a+h*n*l-e*m*l-s*n*c+e*r*c)*k,this}scale(t){const e=this.elements,n=t.x,a=t.y,i=t.z;return e[0]*=n,e[4]*=a,e[8]*=i,e[1]*=n,e[5]*=a,e[9]*=i,e[2]*=n,e[6]*=a,e[10]*=i,e[3]*=n,e[7]*=a,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],a=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,a))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),a=Math.sin(e),i=1-n,s=t.x,r=t.y,l=t.z,o=i*s,h=i*r;return this.set(o*s+n,o*r-a*l,o*l+a*r,0,o*r+a*l,h*r+n,h*l-a*s,0,o*l-a*r,h*l+a*s,i*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,a,i,s){return this.set(1,n,i,0,t,1,s,0,e,a,1,0,0,0,0,1),this}compose(t,e,n){const a=this.elements,i=e._x,s=e._y,r=e._z,l=e._w,o=i+i,h=s+s,m=r+r,c=i*o,p=i*h,u=i*m,d=s*h,g=s*m,f=r*m,_=l*o,y=l*h,v=l*m,x=n.x,N=n.y,k=n.z;return a[0]=(1-(d+f))*x,a[1]=(p+v)*x,a[2]=(u-y)*x,a[3]=0,a[4]=(p-v)*N,a[5]=(1-(c+f))*N,a[6]=(g+_)*N,a[7]=0,a[8]=(u+y)*k,a[9]=(g-_)*k,a[10]=(1-(c+d))*k,a[11]=0,a[12]=t.x,a[13]=t.y,a[14]=t.z,a[15]=1,this}decompose(t,e,n){const a=this.elements;let i=Ye.set(a[0],a[1],a[2]).length();const s=Ye.set(a[4],a[5],a[6]).length(),r=Ye.set(a[8],a[9],a[10]).length();this.determinant()<0&&(i=-i),t.x=a[12],t.y=a[13],t.z=a[14],Je.copy(this);const l=1/i,o=1/s,h=1/r;return Je.elements[0]*=l,Je.elements[1]*=l,Je.elements[2]*=l,Je.elements[4]*=o,Je.elements[5]*=o,Je.elements[6]*=o,Je.elements[8]*=h,Je.elements[9]*=h,Je.elements[10]*=h,e.setFromRotationMatrix(Je),n.x=i,n.y=s,n.z=r,this}makePerspective(t,e,n,a,i,s){void 0===s&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const r=this.elements,l=2*i/(e-t),o=2*i/(n-a),h=(e+t)/(e-t),m=(n+a)/(n-a),c=-(s+i)/(s-i),p=-2*s*i/(s-i);return r[0]=l,r[4]=0,r[8]=h,r[12]=0,r[1]=0,r[5]=o,r[9]=m,r[13]=0,r[2]=0,r[6]=0,r[10]=c,r[14]=p,r[3]=0,r[7]=0,r[11]=-1,r[15]=0,this}makeOrthographic(t,e,n,a,i,s){const r=this.elements,l=1/(e-t),o=1/(n-a),h=1/(s-i),m=(e+t)*l,c=(n+a)*o,p=(s+i)*h;return r[0]=2*l,r[4]=0,r[8]=0,r[12]=-m,r[1]=0,r[5]=2*o,r[9]=0,r[13]=-c,r[2]=0,r[6]=0,r[10]=-2*h,r[14]=-p,r[3]=0,r[7]=0,r[11]=0,r[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let a=0;a<16;a++)if(e[a]!==n[a])return!1;return!0}fromArray(t,e){void 0===e&&(e=0);for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t,e){void 0===t&&(t=[]),void 0===e&&(e=0);const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Ye=new fe,Je=new Ze,Xe=new fe(0,0,0),Ge=new fe(1,1,1),Qe=new fe,$e=new fe,Ke=new fe,tn=new Ze,en=new ge;class nn{constructor(t,e,n,a){void 0===t&&(t=0),void 0===e&&(e=0),void 0===n&&(n=0),void 0===a&&(a=nn.DefaultOrder),this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=a}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,a){return void 0===a&&(a=this._order),this._x=t,this._y=e,this._z=n,this._order=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){void 0===e&&(e=this._order),void 0===n&&(n=!0);const a=t.elements,i=a[0],s=a[4],r=a[8],l=a[1],o=a[5],h=a[9],m=a[2],c=a[6],p=a[10];switch(e){case"XYZ":this._y=Math.asin(Jt(r,-1,1)),Math.abs(r)<.9999999?(this._x=Math.atan2(-h,p),this._z=Math.atan2(-s,i)):(this._x=Math.atan2(c,o),this._z=0);break;case"YXZ":this._x=Math.asin(-Jt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(r,p),this._z=Math.atan2(l,o)):(this._y=Math.atan2(-m,i),this._z=0);break;case"ZXY":this._x=Math.asin(Jt(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-m,p),this._z=Math.atan2(-s,o)):(this._y=0,this._z=Math.atan2(l,i));break;case"ZYX":this._y=Math.asin(-Jt(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(c,p),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-s,o));break;case"YZX":this._z=Math.asin(Jt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,o),this._y=Math.atan2(-m,i)):(this._x=0,this._y=Math.atan2(r,p));break;case"XZY":this._z=Math.asin(-Jt(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(c,o),this._y=Math.atan2(r,i)):(this._x=Math.atan2(-h,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!0===n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return tn.makeRotationFromQuaternion(t),this.setFromRotationMatrix(tn,e,n)}setFromVector3(t,e){return void 0===e&&(e=this._order),this.set(t.x,t.y,t.z,e)}reorder(t){return en.setFromEuler(this),this.setFromQuaternion(en,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}nn.DefaultOrder="XYZ",nn.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class an{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}isEnabled(t){return 0!=(this.mask&(1<<t|0))}}let sn=0;const rn=new fe,ln=new ge,on=new Ze,hn=new fe,mn=new fe,cn=new fe,pn=new ge,un=new fe(1,0,0),dn=new fe(0,1,0),gn=new fe(0,0,1),fn={type:"added"},_n={type:"removed"};class yn extends jt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:sn++}),this.uuid=Yt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=yn.DefaultUp.clone();const t=new fe,e=new nn,n=new ge,a=new fe(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new Ze},normalMatrix:{value:new Qt}}),this.matrix=new Ze,this.matrixWorld=new Ze,this.matrixAutoUpdate=yn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new an,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ln.setFromAxisAngle(t,e),this.quaternion.multiply(ln),this}rotateOnWorldAxis(t,e){return ln.setFromAxisAngle(t,e),this.quaternion.premultiply(ln),this}rotateX(t){return this.rotateOnAxis(un,t)}rotateY(t){return this.rotateOnAxis(dn,t)}rotateZ(t){return this.rotateOnAxis(gn,t)}translateOnAxis(t,e){return rn.copy(t).applyQuaternion(this.quaternion),this.position.add(rn.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(un,t)}translateY(t){return this.translateOnAxis(dn,t)}translateZ(t){return this.translateOnAxis(gn,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(on.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?hn.copy(t):hn.set(t,e,n);const a=this.parent;this.updateWorldMatrix(!0,!1),mn.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?on.lookAt(mn,hn,this.up):on.lookAt(hn,mn,this.up),this.quaternion.setFromRotationMatrix(on),a&&(on.extractRotation(a.matrixWorld),ln.setFromRotationMatrix(on),this.quaternion.premultiply(ln.invert()))}add(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(fn)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(_n)),this}removeFromParent(){const t=this.parent;return null!==t&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(_n)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),on.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),on.multiply(t.parent.matrixWorld)),t.applyMatrix4(on),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,a=this.children.length;n<a;n++){const a=this.children[n].getObjectByProperty(t,e);if(void 0!==a)return a}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(mn,t,cn),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(mn,pn,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,a=e.length;n<a;n++)e[n].traverse(t)}traverseVisible(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,a=e.length;n<a;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,a=e.length;n<a;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}}toJSON(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const a={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(a.uuid=this.uuid,a.type=this.type,""!==this.name&&(a.name=this.name),!0===this.castShadow&&(a.castShadow=!0),!0===this.receiveShadow&&(a.receiveShadow=!0),!1===this.visible&&(a.visible=!1),!1===this.frustumCulled&&(a.frustumCulled=!1),0!==this.renderOrder&&(a.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(a.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&(a.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,a=n.length;e<a;e++){const a=n[e];i(t.shapes,a)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,a=this.material.length;n<a;n++)e.push(i(t.materials,this.material[n]));a.material=e}else a.material=i(t.materials,this.material);if(this.children.length>0){a.children=[];for(let e=0;e<this.children.length;e++)a.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){a.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];a.animations.push(i(t.animations,n))}}if(e){const e=s(t.geometries),a=s(t.materials),i=s(t.textures),r=s(t.images),l=s(t.shapes),o=s(t.skeletons),h=s(t.animations),m=s(t.nodes);e.length>0&&(n.geometries=e),a.length>0&&(n.materials=a),i.length>0&&(n.textures=i),r.length>0&&(n.images=r),l.length>0&&(n.shapes=l),o.length>0&&(n.skeletons=o),h.length>0&&(n.animations=h),m.length>0&&(n.nodes=m)}return n.object=a,n;function s(t){const e=[];for(const n in t){const a=t[n];delete a.metadata,e.push(a)}return e}}clone(t){return(new this.constructor).copy(this,t)}copy(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let n=0;n<t.children.length;n++){const e=t.children[n];this.add(e.clone())}return this}}yn.DefaultUp=new fe(0,1,0),yn.DefaultMatrixAutoUpdate=!0;const vn=new fe,xn=new fe,Nn=new fe,kn=new fe,Mn=new fe,wn=new fe,bn=new fe,Sn=new fe,zn=new fe,En=new fe;class An{constructor(t,e,n){void 0===t&&(t=new fe),void 0===e&&(e=new fe),void 0===n&&(n=new fe),this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,a){a.subVectors(n,e),vn.subVectors(t,e),a.cross(vn);const i=a.lengthSq();return i>0?a.multiplyScalar(1/Math.sqrt(i)):a.set(0,0,0)}static getBarycoord(t,e,n,a,i){vn.subVectors(a,e),xn.subVectors(n,e),Nn.subVectors(t,e);const s=vn.dot(vn),r=vn.dot(xn),l=vn.dot(Nn),o=xn.dot(xn),h=xn.dot(Nn),m=s*o-r*r;if(0===m)return i.set(-2,-1,-1);const c=1/m,p=(o*l-r*h)*c,u=(s*h-r*l)*c;return i.set(1-p-u,u,p)}static containsPoint(t,e,n,a){return this.getBarycoord(t,e,n,a,kn),kn.x>=0&&kn.y>=0&&kn.x+kn.y<=1}static getUV(t,e,n,a,i,s,r,l){return this.getBarycoord(t,e,n,a,kn),l.set(0,0),l.addScaledVector(i,kn.x),l.addScaledVector(s,kn.y),l.addScaledVector(r,kn.z),l}static isFrontFacing(t,e,n,a){return vn.subVectors(n,e),xn.subVectors(t,e),vn.cross(xn).dot(a)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,a){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[a]),this}setFromAttributeAndIndices(t,e,n,a){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,a),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return vn.subVectors(this.c,this.b),xn.subVectors(this.a,this.b),.5*vn.cross(xn).length()}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return An.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return An.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,a,i){return An.getUV(t,this.a,this.b,this.c,e,n,a,i)}containsPoint(t){return An.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return An.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,a=this.b,i=this.c;let s,r;Mn.subVectors(a,n),wn.subVectors(i,n),Sn.subVectors(t,n);const l=Mn.dot(Sn),o=wn.dot(Sn);if(l<=0&&o<=0)return e.copy(n);zn.subVectors(t,a);const h=Mn.dot(zn),m=wn.dot(zn);if(h>=0&&m<=h)return e.copy(a);const c=l*m-h*o;if(c<=0&&l>=0&&h<=0)return s=l/(l-h),e.copy(n).addScaledVector(Mn,s);En.subVectors(t,i);const p=Mn.dot(En),u=wn.dot(En);if(u>=0&&p<=u)return e.copy(i);const d=p*o-l*u;if(d<=0&&o>=0&&u<=0)return r=o/(o-u),e.copy(n).addScaledVector(wn,r);const g=h*u-p*m;if(g<=0&&m-h>=0&&p-u>=0)return bn.subVectors(i,a),r=(m-h)/(m-h+(p-u)),e.copy(a).addScaledVector(bn,r);const f=1/(g+d+c);return s=d*f,r=c*f,e.copy(n).addScaledVector(Mn,s).addScaledVector(wn,r)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}let Cn=0;class Tn extends jt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:Cn++}),this.uuid=Yt(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const a=this[e];void 0!==a?a&&a.isColor?a.set(n):a&&a.isVector3&&n&&n.isVector3?a.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}}toJSON(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function a(t){const e=[];for(const n in t){const a=t[n];delete a.metadata,e.push(a)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=a(t.textures),i=a(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n}clone(){return(new this.constructor).copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let a=0;a!==t;++a)n[a]=e[a].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){!0===t&&this.version++}get vertexTangents(){return console.warn("THREE."+this.type+": .vertexTangents has been removed."),!1}set vertexTangents(t){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}Tn.fromType=function(){return null};new fe,new Gt;new Ze,new yn,new fe,new ve,new ve,new fe;function Ln(t){const e={};for(const n in t){e[n]={};for(const a in t[n]){const i=t[n][a];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[n][a]=i.clone():Array.isArray(i)?e[n][a]=i.slice():e[n][a]=i}}return e}function Rn(t){const e={};for(let n=0;n<t.length;n++){const a=Ln(t[n]);for(const t in a)e[t]=a[t]}return e}class Pn extends Tn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ln(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const a in this.uniforms){const n=this.uniforms[a].value;n&&n.isTexture?e.uniforms[a]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[a]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[a]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[a]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[a]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[a]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[a]={type:"m4",value:n.toArray()}:e.uniforms[a]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const a in this.extensions)!0===this.extensions[a]&&(n[a]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}const On="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",In="#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARCOLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEENCOLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEENROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",Dn={common:{diffuse:{value:new he(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Qt},uv2Transform:{value:new Qt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Gt(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new he(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new he(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Qt}},sprite:{diffuse:{value:new he(16777215)},opacity:{value:1},center:{value:new Gt(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Qt}}},Fn={basic:{uniforms:Rn([Dn.common,Dn.specularmap,Dn.envmap,Dn.aomap,Dn.lightmap,Dn.fog]),vertexShader:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"},lambert:{uniforms:Rn([Dn.common,Dn.specularmap,Dn.envmap,Dn.aomap,Dn.lightmap,Dn.emissivemap,Dn.fog,Dn.lights,{emissive:{value:new he(0)}}]),vertexShader:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"},phong:{uniforms:Rn([Dn.common,Dn.specularmap,Dn.envmap,Dn.aomap,Dn.lightmap,Dn.emissivemap,Dn.bumpmap,Dn.normalmap,Dn.displacementmap,Dn.fog,Dn.lights,{emissive:{value:new he(0)},specular:{value:new he(1118481)},shininess:{value:30}}]),vertexShader:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"},standard:{uniforms:Rn([Dn.common,Dn.envmap,Dn.aomap,Dn.lightmap,Dn.emissivemap,Dn.bumpmap,Dn.normalmap,Dn.displacementmap,Dn.roughnessmap,Dn.metalnessmap,Dn.fog,Dn.lights,{emissive:{value:new he(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:On,fragmentShader:In},toon:{uniforms:Rn([Dn.common,Dn.aomap,Dn.lightmap,Dn.emissivemap,Dn.bumpmap,Dn.normalmap,Dn.displacementmap,Dn.gradientmap,Dn.fog,Dn.lights,{emissive:{value:new he(0)}}]),vertexShader:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"},matcap:{uniforms:Rn([Dn.common,Dn.bumpmap,Dn.normalmap,Dn.displacementmap,Dn.fog,{matcap:{value:null}}]),vertexShader:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",fragmentShader:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}"},points:{uniforms:Rn([Dn.points,Dn.fog]),vertexShader:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}"},dashed:{uniforms:Rn([Dn.common,Dn.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}"},depth:{uniforms:Rn([Dn.common,Dn.displacementmap]),vertexShader:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",fragmentShader:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}"},normal:{uniforms:Rn([Dn.common,Dn.bumpmap,Dn.normalmap,Dn.displacementmap,{opacity:{value:1}}]),vertexShader:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",fragmentShader:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}"},sprite:{uniforms:Rn([Dn.sprite,Dn.fog]),vertexShader:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},background:{uniforms:{uvTransform:{value:new Qt},t2D:{value:null}},vertexShader:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",fragmentShader:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tgl_FragColor = texture2D( t2D, vUv );\n\t#ifdef DECODE_VIDEO_TEXTURE\n\t\tgl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );\n\t#endif\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}"},cube:{uniforms:Rn([Dn.envmap,{opacity:{value:1}}]),vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",fragmentShader:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}"},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",fragmentShader:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}"},distanceRGBA:{uniforms:Rn([Dn.common,Dn.displacementmap,{referencePosition:{value:new fe},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",fragmentShader:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}"},shadow:{uniforms:Rn([Dn.lights,Dn.fog,{color:{value:new he(0)},opacity:{value:1}}]),vertexShader:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",fragmentShader:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"}};Fn.physical={uniforms:Rn([Fn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Gt(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new he(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Gt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new he(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new he(1,1,1)},specularColorMap:{value:null}}]),vertexShader:On,fragmentShader:In},new de,new class extends de{constructor(t,e,n,a){void 0===t&&(t=null),void 0===e&&(e=1),void 0===n&&(n=1),void 0===a&&(a=1),super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:a},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},new class extends de{constructor(t,e,n,a){void 0===t&&(t=null),void 0===e&&(e=1),void 0===n&&(n=1),void 0===a&&(a=1),super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:a},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},new class extends de{constructor(t,e,n,a,i,s,r,l,o,h){super(t=void 0!==t?t:[],e=void 0!==e?e:301,n,a,i,s,r,l,o,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}};class Vn extends Tn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new he(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}new fe,new fe,new Ze,new class{constructor(t,e){void 0===t&&(t=new fe),void 0===e&&(e=new fe(0,0,-1)),this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ve)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ve.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ve.copy(this.direction).multiplyScalar(e).add(this.origin),Ve.distanceToSquared(t))}distanceSqToSegment(t,e,n,a){Be.copy(t).add(e).multiplyScalar(.5),He.copy(e).sub(t).normalize(),qe.copy(this.origin).sub(Be);const i=.5*t.distanceTo(e),s=-this.direction.dot(He),r=qe.dot(this.direction),l=-qe.dot(He),o=qe.lengthSq(),h=Math.abs(1-s*s);let m,c,p,u;if(h>0)if(m=s*l-r,c=s*r-l,u=i*h,m>=0)if(c>=-u)if(c<=u){const t=1/h;m*=t,c*=t,p=m*(m+s*c+2*r)+c*(s*m+c+2*l)+o}else c=i,m=Math.max(0,-(s*c+r)),p=-m*m+c*(c+2*l)+o;else c=-i,m=Math.max(0,-(s*c+r)),p=-m*m+c*(c+2*l)+o;else c<=-u?(m=Math.max(0,-(-s*i+r)),c=m>0?-i:Math.min(Math.max(-i,-l),i),p=-m*m+c*(c+2*l)+o):c<=u?(m=0,c=Math.min(Math.max(-i,-l),i),p=c*(c+2*l)+o):(m=Math.max(0,-(s*i+r)),c=m>0?i:Math.min(Math.max(-i,-l),i),p=-m*m+c*(c+2*l)+o);else c=s>0?-i:i,m=Math.max(0,-(s*c+r)),p=-m*m+c*(c+2*l)+o;return n&&n.copy(this.direction).multiplyScalar(m).add(this.origin),a&&a.copy(He).multiplyScalar(c).add(Be),p}intersectSphere(t,e){Ve.subVectors(t.center,this.origin);const n=Ve.dot(this.direction),a=Ve.dot(Ve)-n*n,i=t.radius*t.radius;if(a>i)return null;const s=Math.sqrt(i-a),r=n-s,l=n+s;return r<0&&l<0?null:r<0?this.at(l,e):this.at(r,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,a,i,s,r,l;const o=1/this.direction.x,h=1/this.direction.y,m=1/this.direction.z,c=this.origin;return o>=0?(n=(t.min.x-c.x)*o,a=(t.max.x-c.x)*o):(n=(t.max.x-c.x)*o,a=(t.min.x-c.x)*o),h>=0?(i=(t.min.y-c.y)*h,s=(t.max.y-c.y)*h):(i=(t.max.y-c.y)*h,s=(t.min.y-c.y)*h),n>s||i>a?null:((i>n||n!=n)&&(n=i),(s<a||a!=a)&&(a=s),m>=0?(r=(t.min.z-c.z)*m,l=(t.max.z-c.z)*m):(r=(t.max.z-c.z)*m,l=(t.min.z-c.z)*m),n>l||r>a?null:((r>n||n!=n)&&(n=r),(l<a||a!=a)&&(a=l),a<0?null:this.at(n>=0?n:a,e)))}intersectsBox(t){return null!==this.intersectBox(t,Ve)}intersectTriangle(t,e,n,a,i){Ue.subVectors(e,t),We.subVectors(n,t),je.crossVectors(Ue,We);let s,r=this.direction.dot(je);if(r>0){if(a)return null;s=1}else{if(!(r<0))return null;s=-1,r=-r}qe.subVectors(this.origin,t);const l=s*this.direction.dot(We.crossVectors(qe,We));if(l<0)return null;const o=s*this.direction.dot(Ue.cross(qe));if(o<0)return null;if(l+o>r)return null;const h=-s*qe.dot(je);return h<0?null:this.at(h/r,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}},new Fe;new fe,new fe;new fe,new fe,new fe,new fe,new An;class Bn extends Tn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new he(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const Hn={ShadowMaterial:class extends Tn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new he(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}},SpriteMaterial:class extends Tn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new he(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}},RawShaderMaterial:class extends Pn{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}},ShaderMaterial:Pn,PointsMaterial:class extends Tn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new he(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}},MeshPhysicalMaterial:class extends Bn{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Gt(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Jt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new he(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new he(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new he(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(t)}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}},MeshStandardMaterial:Bn,MeshPhongMaterial:class extends Tn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new he(16777215),this.specular=new he(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}},MeshToonMaterial:class extends Tn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new he(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},MeshNormalMaterial:class extends Tn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}},MeshLambertMaterial:class extends Tn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new he(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new he(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},MeshDepthMaterial:class extends Tn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}},MeshDistanceMaterial:class extends Tn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new fe,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}},MeshBasicMaterial:class extends Tn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new he(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},MeshMatcapMaterial:class extends Tn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new he(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Gt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}},LineDashedMaterial:class extends Vn{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}},LineBasicMaterial:Vn,Material:Tn};Tn.fromType=function(t){return new Hn[t]};const qn="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]";/((?:WC+[\/:])*)/.source.replace("WC","[^\\[\\]\\.:\\/]"),/(WCOD+)?/.source.replace("WCOD",qn),/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC","[^\\[\\]\\.:\\/]"),/\.(WC+)(?:\[(.+)\])?/.source.replace("WC","[^\\[\\]\\.:\\/]");const Un=new Uint32Array(512),Wn=new Uint32Array(512);for(let $a=0;$a<256;++$a){const t=$a-127;t<-27?(Un[$a]=0,Un[256|$a]=32768,Wn[$a]=24,Wn[256|$a]=24):t<-14?(Un[$a]=1024>>-t-14,Un[256|$a]=1024>>-t-14|32768,Wn[$a]=-t-1,Wn[256|$a]=-t-1):t<=15?(Un[$a]=t+15<<10,Un[256|$a]=t+15<<10|32768,Wn[$a]=13,Wn[256|$a]=13):t<128?(Un[$a]=31744,Un[256|$a]=64512,Wn[$a]=24,Wn[256|$a]=24):(Un[$a]=31744,Un[256|$a]=64512,Wn[$a]=13,Wn[256|$a]=13)}const jn=new Uint32Array(2048),Zn=new Uint32Array(64),Yn=new Uint32Array(64);for(let $a=1;$a<1024;++$a){let t=$a<<13,e=0;for(;0==(8388608&t);)t<<=1,e-=8388608;t&=-8388609,e+=947912704,jn[$a]=t|e}for(let $a=1024;$a<2048;++$a)jn[$a]=939524096+($a-1024<<13);for(let $a=1;$a<31;++$a)Zn[$a]=$a<<23;Zn[31]=1199570944,Zn[32]=2147483648;for(let $a=33;$a<63;++$a)Zn[$a]=2147483648+($a-32<<23);Zn[63]=3347054592;for(let $a=1;$a<64;++$a)32!==$a&&(Yn[$a]=1024);"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"141"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="141");function Jn(t){var e=0,n=t.children,a=n&&n.length;if(a)for(;--a>=0;)e+=n[a].value;else e=1;t.value=e}function Xn(t,e){t instanceof Map?(t=[void 0,t],void 0===e&&(e=Qn)):void 0===e&&(e=Gn);for(var n,a,i,s,r,l=new ta(t),o=[l];n=o.pop();)if((i=e(n.data))&&(r=(i=Array.from(i)).length))for(n.children=i,s=r-1;s>=0;--s)o.push(a=i[s]=new ta(i[s])),a.parent=n,a.depth=n.depth+1;return l.eachBefore(Kn)}function Gn(t){return t.children}function Qn(t){return Array.isArray(t)?t[1]:null}function $n(t){void 0!==t.data.value&&(t.value=t.data.value),t.data=t.data.data}function Kn(t){var e=0;do{t.height=e}while((t=t.parent)&&t.height<++e)}function ta(t){this.data=t,this.depth=this.height=0,this.parent=null}function ea(t){return null==t?null:function(t){if("function"!=typeof t)throw new Error;return t}(t)}ta.prototype=Xn.prototype={constructor:ta,count:function(){return this.eachAfter(Jn)},each:function(t,e){let n=-1;for(const a of this)t.call(e,a,++n,this);return this},eachAfter:function(t,e){for(var n,a,i,s=this,r=[s],l=[],o=-1;s=r.pop();)if(l.push(s),n=s.children)for(a=0,i=n.length;a<i;++a)r.push(n[a]);for(;s=l.pop();)t.call(e,s,++o,this);return this},eachBefore:function(t,e){for(var n,a,i=this,s=[i],r=-1;i=s.pop();)if(t.call(e,i,++r,this),n=i.children)for(a=n.length-1;a>=0;--a)s.push(n[a]);return this},find:function(t,e){let n=-1;for(const a of this)if(t.call(e,a,++n,this))return a},sum:function(t){return this.eachAfter((function(e){for(var n=+t(e.data)||0,a=e.children,i=a&&a.length;--i>=0;)n+=a[i].value;e.value=n}))},sort:function(t){return this.eachBefore((function(e){e.children&&e.children.sort(t)}))},path:function(t){for(var e=this,n=function(t,e){if(t===e)return t;var n=t.ancestors(),a=e.ancestors(),i=null;for(t=n.pop(),e=a.pop();t===e;)i=t,t=n.pop(),e=a.pop();return i}(e,t),a=[e];e!==n;)e=e.parent,a.push(e);for(var i=a.length;t!==n;)a.splice(i,0,t),t=t.parent;return a},ancestors:function(){for(var t=this,e=[t];t=t.parent;)e.push(t);return e},descendants:function(){return Array.from(this)},leaves:function(){var t=[];return this.eachBefore((function(e){e.children||t.push(e)})),t},links:function(){var t=this,e=[];return t.each((function(n){n!==t&&e.push({source:n.parent,target:n})})),e},copy:function(){return Xn(this).eachBefore($n)},[Symbol.iterator]:function*(){var t,e,n,a,i=this,s=[i];do{for(t=s.reverse(),s=[];i=t.pop();)if(yield i,e=i.children)for(n=0,a=e.length;n<a;++n)s.push(e[n])}while(s.length)}};var na={depth:-1},aa={},ia={};function sa(t){return t.id}function ra(t){return t.parentId}function la(t){let e=t.length;if(e<2)return"";for(;--e>1&&!oa(t,e););return t.slice(0,e)}function oa(t,e){if("/"===t[e]){let n=0;for(;e>0&&"\\"===t[--e];)++n;if(0==(1&n))return!0}return!1}function ha(t,e){return t.parent===e.parent?1:2}function ma(t){var e=t.children;return e?e[0]:t.t}function ca(t){var e=t.children;return e?e[e.length-1]:t.t}function pa(t,e,n){var a=n/(e.i-t.i);e.c-=a,e.s+=n,t.c+=a,e.z+=n,e.m+=n}function ua(t,e,n){return t.a.parent===e.parent?t.a:n}function da(t,e){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=e}function ga(t){let e,n;if(null!=t.children){let a=t.children[0],i=t.children[1];e=null!=a.data.hide&&a.data.hide?0:a.height+1,n=null!=i.data.hide&&i.data.hide?0:i.height+1}else e=t.height+1,n=t.height+1;return e-n}function fa(t){let{data:e=[[1,2],[2,3],[2,4]],nodes:n,id:i,nodeFontSize:s=.6,nodeRadius:l=7,width:o=250,height:c=250,scale:p=100,slim:u=0,cwidth:d=p,cheight:g,marginTop:_=20,marginBottom:y=20,marginRight:x=20,marginLeft:N=20,margins:k=[_,x+u,y,N+u],edgeLength:b,markLevels:S=!1,markDepth:z=!1,markHeight:E=!1,markHeightBF:A=!1,heightStartsAt:C=0}=t;const T=m(o,c,k),L=n||function(t){let e;return e=function(t){return Array.isArray(t)&&Array.isArray(t[0][1])}(t)?v(t):function(t){let e=[];for(let n=0;n<t.length;n++)if(f(t[n]))e.push(t[n]);else{let a={child:t[n][0],parent:t[n][1]};e.push(a)}return e}(t),e}(e),R=function(){var t,e=sa,n=ra;function a(a){var i,s,r,l,o,h,m,c,p=Array.from(a),u=e,d=n,g=new Map;if(null!=t){const e=p.map(((e,n)=>function(t){let e=(t=""+t).length;return oa(t,e-1)&&!oa(t,e-2)&&(t=t.slice(0,-1)),"/"===t[0]?t:"/"+t}(t(e,n,a)))),n=e.map(la),i=new Set(e).add("");for(const t of n)i.has(t)||(i.add(t),e.push(t),n.push(la(t)),p.push(ia));u=(t,n)=>e[n],d=(t,e)=>n[e]}for(r=0,i=p.length;r<i;++r)s=p[r],h=p[r]=new ta(s),null!=(m=u(s,r,a))&&(m+="")&&(c=h.id=m,g.set(c,g.has(c)?aa:h)),null!=(m=d(s,r,a))&&(m+="")&&(h.parent=m);for(r=0;r<i;++r)if(m=(h=p[r]).parent){if(!(o=g.get(m)))throw new Error("missing: "+m);if(o===aa)throw new Error("ambiguous: "+m);o.children?o.children.push(h):o.children=[h],h.parent=o}else{if(l)throw new Error("multiple roots");l=h}if(!l)throw new Error("no root");if(null!=t){for(;l.data===ia&&1===l.children.length;)l=l.children[0],--i;for(let t=p.length-1;t>=0&&(h=p[t],h.data===ia);--t)h.data=null}if(l.parent=na,l.eachBefore((function(t){t.depth=t.parent.depth+1,--i})).eachBefore(Kn),l.parent=null,i>0)throw new Error("cycle");return l}return a.id=function(t){return arguments.length?(e=ea(t),a):e},a.parentId=function(t){return arguments.length?(n=ea(t),a):n},a.path=function(e){return arguments.length?(t=ea(e),a):t},a}().id((t=>t.child)).parentId((t=>t.parent))(L),P=b||M(R),O=function(){var t=ha,e=1,n=1,a=null;function i(i){var o=function(t){for(var e,n,a,i,s,r=new da(t,0),l=[r];e=l.pop();)if(a=e._.children)for(e.children=new Array(s=a.length),i=s-1;i>=0;--i)l.push(n=e.children[i]=new da(a[i],i)),n.parent=e;return(r.parent=new da(null,0)).children=[r],r}(i);if(o.eachAfter(s),o.parent.m=-o.z,o.eachBefore(r),a)i.eachBefore(l);else{var h=i,m=i,c=i;i.eachBefore((function(t){t.x<h.x&&(h=t),t.x>m.x&&(m=t),t.depth>c.depth&&(c=t)}));var p=h===m?1:t(h,m)/2,u=p-h.x,d=e/(m.x+p+u),g=n/(c.depth||1);i.eachBefore((function(t){t.x=(t.x+u)*d,t.y=t.depth*g}))}return i}function s(e){var n=e.children,a=e.parent.children,i=e.i?a[e.i-1]:null;if(n){!function(t){for(var e,n=0,a=0,i=t.children,s=i.length;--s>=0;)(e=i[s]).z+=n,e.m+=n,n+=e.s+(a+=e.c)}(e);var s=(n[0].z+n[n.length-1].z)/2;i?(e.z=i.z+t(e._,i._),e.m=e.z-s):e.z=s}else i&&(e.z=i.z+t(e._,i._));e.parent.A=function(e,n,a){if(n){for(var i,s=e,r=e,l=n,o=s.parent.children[0],h=s.m,m=r.m,c=l.m,p=o.m;l=ca(l),s=ma(s),l&&s;)o=ma(o),(r=ca(r)).a=e,(i=l.z+c-s.z-h+t(l._,s._))>0&&(pa(ua(l,e,a),e,i),h+=i,m+=i),c+=l.m,h+=s.m,p+=o.m,m+=r.m;l&&!ca(r)&&(r.t=l,r.m+=c-m),s&&!ma(o)&&(o.t=s,o.m+=h-p,a=e)}return a}(e,i,e.parent.A||a[0])}function r(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function l(t){t.x*=e,t.y=t.depth*n}return i.separation=function(e){return arguments.length?(t=e,i):t},i.size=function(t){return arguments.length?(a=!1,e=+t[0],n=+t[1],i):a?null:[e,n]},i.nodeSize=function(t){return arguments.length?(a=!0,e=+t[0],n=+t[1],i):a?[e,n]:null},i}().size([T.width,P]).separation(((t,e)=>t.parent===e.parent?1:1.1));O(R);const I=R.links(),D=R.descendants();return a.createElement(r,{className:"tree",width:o,height:c,cwidth:d,cheight:g,margins:k},a.createElement("g",{className:"hago_tree"},function(t,e,n,i){return t?a.createElement("g",{className:"hago_tree_levels"},function(t){const e=[];let n=t[0].depth;e.push(t[0]);for(let a=0;a<t.length;a++)t[a].depth>n&&(e.push(t[a]),n=t[a].depth);return e}(e).map((t=>a.createElement("g",null,a.createElement(h,{val:t.depth+1,pos:{x:0,y:t.y+3},color:"lightgrey",fontSize:i-.2}),a.createElement("line",{x1:-n.width+n.width+10,y1:t.y,x2:n.width,y2:t.y,stroke:"lightgrey"}))))):a.createElement(a.Fragment,null)}(S,D,T,s),function(t,e,n,i,s){return t?a.createElement("g",{className:"hago_tree_depth_marks"},e.map(((t,e)=>a.createElement(h,{val:t.depth,pos:{x:t.x,y:t.y},key:n+"_"+e,dy:-i-i/2,fontSize:s-.2})))):a.createElement(a.Fragment,null)}(z,D,i,l,s),function(t,e){return a.createElement("g",{className:"hago_tree_edges"},t.map(((t,n)=>a.createElement("g",{className:"hago_tree_edge",key:e+"_tree_edge_"+n},a.createElement("line",{x1:t.source.x,y1:t.source.y,x2:t.target.x,y2:t.target.y,display:w(t),stroke:"currentColor"})))))}(I,i),function(t,e,n){return void 0===n&&(n=5),a.createElement("g",{className:"hago_tree_nodes"},t.map((t=>a.createElement("g",{transform:"translate("+t.x+", "+t.y+")",display:w(t)},a.createElement("circle",{stroke:"currentColor",r:n,fill:"white"}),a.createElement("text",{textAnchor:"middle",fontSize:e+"rem",dy:"0.3em"},t.id)))))}(D,s,l),function(t,e,n,i,s){return t?a.createElement("g",{className:"hago_tree_height_marks"},e.filter((t=>!t.data.hide)).map((t=>a.createElement(h,{val:t.height+n,pos:{x:t.x,y:t.y},dx:i+i/2,dy:i/2,fontSize:s-.2})))):a.createElement(a.Fragment,null)}(E,D,C,l,s),function(t,e,n,i){return t?a.createElement("g",{className:"hago_tree_height_balance_factor_marks"},e.filter((t=>!t.data.hide)).map((t=>a.createElement("g",{className:Math.abs(ga(t))>1?"imbalanced":"balanced"},a.createElement(h,{val:ga(t),fontSize:n-.2,pos:{x:t.x,y:t.y},dy:-i-i/2}))))):a.createElement(a.Fragment,null)}(A,D,s,l)))}function _a(t){let{data:e=[1,2,3,4],reverseIndex:n=!1,startIndex:i=0,className:s="hago_StaticArray",id:l=c(s),width:o=.574045*e.length**2+22.878*e.length+45.8824,height:h=o,scale:u=100,cwidth:d=u,cheight:g=.5,marginTop:f=30,marginRight:v=30,marginBottom:x=30,marginLeft:N=30,margins:M=[f,v,x,N]}=t;const w=m(o,h,M),S=y(e),z=J().domain(S).range([0,w.width]).paddingInner(.1),E=z.bandwidth();return a.createElement(r,{className:s,width:o,height:h,cwidth:d,cheight:g,margins:M},a.createElement("defs",null,a.createElement(k,{id:"Hago_StaticArray_Pointer",refX:0,refY:0,width:5,height:5,orient:"auto"})),S.map(((t,e)=>a.createElement("g",{className:_(t.class,"hago_StaticArray_element"),key:l+"_"+e,transform:p(z(t),0)},a.createElement("rect",{fill:"white",stroke:"black",width:E,height:E}),a.createElement("g",{className:"hago_StaticArray_element_text"},a.createElement("text",{textAnchor:"middle",fontSize:"0.7rem",dx:E/2,dy:E/1.5},t.val)),a.createElement("g",{className:"hago_StaticArray_index_text"},a.createElement("text",{textAnchor:"middle",fontSize:"0.6rem",dx:E/2,dy:1.5*E},n?S.length-1-(e-i):e+i)),t.ant&&a.createElement("g",{className:"hago_StaticArray_annotation"},a.createElement("text",{textAnchor:"middle",fontSize:"0.6rem",dx:E/2,dy:-E/2},t.ant||t.ant.val)),t.ptr&&a.createElement("g",{className:"hago_StaticArray_pointer",transform:p(-E/1.65,2.3*E)},a.createElement("text",{dx:5,dy:-3,textAnchor:"middle",fontSize:"0.6rem"},t.ptr),a.createElement(b,{start:{x:0,y:0},end:{x:0,y:-M[2]/2.5},color:"black",markerEnd:"Hago_StaticArray_Pointer"}))))))}function ya(t,e,n,a){if(isNaN(e)||isNaN(n))return t;var i,s,r,l,o,h,m,c,p,u=t._root,d={data:a},g=t._x0,f=t._y0,_=t._x1,y=t._y1;if(!u)return t._root=d,t;for(;u.length;)if((h=e>=(s=(g+_)/2))?g=s:_=s,(m=n>=(r=(f+y)/2))?f=r:y=r,i=u,!(u=u[c=m<<1|h]))return i[c]=d,t;if(l=+t._x.call(null,u.data),o=+t._y.call(null,u.data),e===l&&n===o)return d.next=u,i?i[c]=d:t._root=d,t;do{i=i?i[c]=new Array(4):t._root=new Array(4),(h=e>=(s=(g+_)/2))?g=s:_=s,(m=n>=(r=(f+y)/2))?f=r:y=r}while((c=m<<1|h)==(p=(o>=r)<<1|l>=s));return i[p]=u,i[c]=d,t}function va(t,e,n,a,i){this.node=t,this.x0=e,this.y0=n,this.x1=a,this.y1=i}function xa(t){return t[0]}function Na(t){return t[1]}function ka(t,e,n){var a=new Ma(null==e?xa:e,null==n?Na:n,NaN,NaN,NaN,NaN);return null==t?a:a.addAll(t)}function Ma(t,e,n,a,i,s){this._x=t,this._y=e,this._x0=n,this._y0=a,this._x1=i,this._y1=s,this._root=void 0}function wa(t){for(var e={data:t.data},n=e;t=t.next;)n=n.next={data:t.data};return e}da.prototype=Object.create(ta.prototype);var ba=ka.prototype=Ma.prototype;ba.copy=function(){var t,e,n=new Ma(this._x,this._y,this._x0,this._y0,this._x1,this._y1),a=this._root;if(!a)return n;if(!a.length)return n._root=wa(a),n;for(t=[{source:a,target:n._root=new Array(4)}];a=t.pop();)for(var i=0;i<4;++i)(e=a.source[i])&&(e.length?t.push({source:e,target:a.target[i]=new Array(4)}):a.target[i]=wa(e));return n},ba.add=function(t){const e=+this._x.call(null,t),n=+this._y.call(null,t);return ya(this.cover(e,n),e,n,t)},ba.addAll=function(t){var e,n,a,i,s=t.length,r=new Array(s),l=new Array(s),o=1/0,h=1/0,m=-1/0,c=-1/0;for(n=0;n<s;++n)isNaN(a=+this._x.call(null,e=t[n]))||isNaN(i=+this._y.call(null,e))||(r[n]=a,l[n]=i,a<o&&(o=a),a>m&&(m=a),i<h&&(h=i),i>c&&(c=i));if(o>m||h>c)return this;for(this.cover(o,h).cover(m,c),n=0;n<s;++n)ya(this,r[n],l[n],t[n]);return this},ba.cover=function(t,e){if(isNaN(t=+t)||isNaN(e=+e))return this;var n=this._x0,a=this._y0,i=this._x1,s=this._y1;if(isNaN(n))i=(n=Math.floor(t))+1,s=(a=Math.floor(e))+1;else{for(var r,l,o=i-n||1,h=this._root;n>t||t>=i||a>e||e>=s;)switch(l=(e<a)<<1|t<n,(r=new Array(4))[l]=h,h=r,o*=2,l){case 0:i=n+o,s=a+o;break;case 1:n=i-o,s=a+o;break;case 2:i=n+o,a=s-o;break;case 3:n=i-o,a=s-o}this._root&&this._root.length&&(this._root=h)}return this._x0=n,this._y0=a,this._x1=i,this._y1=s,this},ba.data=function(){var t=[];return this.visit((function(e){if(!e.length)do{t.push(e.data)}while(e=e.next)})),t},ba.extent=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]},ba.find=function(t,e,n){var a,i,s,r,l,o,h,m=this._x0,c=this._y0,p=this._x1,u=this._y1,d=[],g=this._root;for(g&&d.push(new va(g,m,c,p,u)),null==n?n=1/0:(m=t-n,c=e-n,p=t+n,u=e+n,n*=n);o=d.pop();)if(!(!(g=o.node)||(i=o.x0)>p||(s=o.y0)>u||(r=o.x1)<m||(l=o.y1)<c))if(g.length){var f=(i+r)/2,_=(s+l)/2;d.push(new va(g[3],f,_,r,l),new va(g[2],i,_,f,l),new va(g[1],f,s,r,_),new va(g[0],i,s,f,_)),(h=(e>=_)<<1|t>=f)&&(o=d[d.length-1],d[d.length-1]=d[d.length-1-h],d[d.length-1-h]=o)}else{var y=t-+this._x.call(null,g.data),v=e-+this._y.call(null,g.data),x=y*y+v*v;if(x<n){var N=Math.sqrt(n=x);m=t-N,c=e-N,p=t+N,u=e+N,a=g.data}}return a},ba.remove=function(t){if(isNaN(s=+this._x.call(null,t))||isNaN(r=+this._y.call(null,t)))return this;var e,n,a,i,s,r,l,o,h,m,c,p,u=this._root,d=this._x0,g=this._y0,f=this._x1,_=this._y1;if(!u)return this;if(u.length)for(;;){if((h=s>=(l=(d+f)/2))?d=l:f=l,(m=r>=(o=(g+_)/2))?g=o:_=o,e=u,!(u=u[c=m<<1|h]))return this;if(!u.length)break;(e[c+1&3]||e[c+2&3]||e[c+3&3])&&(n=e,p=c)}for(;u.data!==t;)if(a=u,!(u=u.next))return this;return(i=u.next)&&delete u.next,a?(i?a.next=i:delete a.next,this):e?(i?e[c]=i:delete e[c],(u=e[0]||e[1]||e[2]||e[3])&&u===(e[3]||e[2]||e[1]||e[0])&&!u.length&&(n?n[p]=u:this._root=u),this):(this._root=i,this)},ba.removeAll=function(t){for(var e=0,n=t.length;e<n;++e)this.remove(t[e]);return this},ba.root=function(){return this._root},ba.size=function(){var t=0;return this.visit((function(e){if(!e.length)do{++t}while(e=e.next)})),t},ba.visit=function(t){var e,n,a,i,s,r,l=[],o=this._root;for(o&&l.push(new va(o,this._x0,this._y0,this._x1,this._y1));e=l.pop();)if(!t(o=e.node,a=e.x0,i=e.y0,s=e.x1,r=e.y1)&&o.length){var h=(a+s)/2,m=(i+r)/2;(n=o[3])&&l.push(new va(n,h,m,s,r)),(n=o[2])&&l.push(new va(n,a,m,h,r)),(n=o[1])&&l.push(new va(n,h,i,s,m)),(n=o[0])&&l.push(new va(n,a,i,h,m))}return this},ba.visitAfter=function(t){var e,n=[],a=[];for(this._root&&n.push(new va(this._root,this._x0,this._y0,this._x1,this._y1));e=n.pop();){var i=e.node;if(i.length){var s,r=e.x0,l=e.y0,o=e.x1,h=e.y1,m=(r+o)/2,c=(l+h)/2;(s=i[0])&&n.push(new va(s,r,l,m,c)),(s=i[1])&&n.push(new va(s,m,l,o,c)),(s=i[2])&&n.push(new va(s,r,c,m,h)),(s=i[3])&&n.push(new va(s,m,c,o,h))}a.push(e)}for(;e=a.pop();)t(e.node,e.x0,e.y0,e.x1,e.y1);return this},ba.x=function(t){return arguments.length?(this._x=t,this):this._x},ba.y=function(t){return arguments.length?(this._y=t,this):this._y};var Sa={value:()=>{}};function za(){for(var t,e=0,n=arguments.length,a={};e<n;++e){if(!(t=arguments[e]+"")||t in a||/[\s.]/.test(t))throw new Error("illegal type: "+t);a[t]=[]}return new Ea(a)}function Ea(t){this._=t}function Aa(t,e){return t.trim().split(/^|\s+/).map((function(t){var n="",a=t.indexOf(".");if(a>=0&&(n=t.slice(a+1),t=t.slice(0,a)),t&&!e.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:n}}))}function Ca(t,e){for(var n,a=0,i=t.length;a<i;++a)if((n=t[a]).name===e)return n.value}function Ta(t,e,n){for(var a=0,i=t.length;a<i;++a)if(t[a].name===e){t[a]=Sa,t=t.slice(0,a).concat(t.slice(a+1));break}return null!=n&&t.push({name:e,value:n}),t}Ea.prototype=za.prototype={constructor:Ea,on:function(t,e){var n,a=this._,i=Aa(t+"",a),s=-1,r=i.length;if(!(arguments.length<2)){if(null!=e&&"function"!=typeof e)throw new Error("invalid callback: "+e);for(;++s<r;)if(n=(t=i[s]).type)a[n]=Ta(a[n],t.name,e);else if(null==e)for(n in a)a[n]=Ta(a[n],t.name,null);return this}for(;++s<r;)if((n=(t=i[s]).type)&&(n=Ca(a[n],t.name)))return n},copy:function(){var t={},e=this._;for(var n in e)t[n]=e[n].slice();return new Ea(t)},call:function(t,e){if((n=arguments.length-2)>0)for(var n,a,i=new Array(n),s=0;s<n;++s)i[s]=arguments[s+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(s=0,n=(a=this._[t]).length;s<n;++s)a[s].value.apply(e,i)},apply:function(t,e,n){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var a=this._[t],i=0,s=a.length;i<s;++i)a[i].value.apply(e,n)}};var La,Ra,Pa=0,Oa=0,Ia=0,Da=0,Fa=0,Va=0,Ba="object"==typeof performance&&performance.now?performance:Date,Ha="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function qa(){return Fa||(Ha(Ua),Fa=Ba.now()+Va)}function Ua(){Fa=0}function Wa(){this._call=this._time=this._next=null}function ja(t,e,n){var a=new Wa;return a.restart(t,e,n),a}function Za(){Fa=(Da=Ba.now())+Va,Pa=Oa=0;try{!function(){qa(),++Pa;for(var t,e=La;e;)(t=Fa-e._time)>=0&&e._call.call(void 0,t),e=e._next;--Pa}()}finally{Pa=0,function(){for(var t,e,n=La,a=1/0;n;)n._call?(a>n._time&&(a=n._time),t=n,n=n._next):(e=n._next,n._next=null,n=t?t._next=e:La=e);Ra=t,Ja(a)}(),Fa=0}}function Ya(){var t=Ba.now(),e=t-Da;e>1e3&&(Va-=e,Da=t)}function Ja(t){Pa||(Oa&&(Oa=clearTimeout(Oa)),t-Fa>24?(t<1/0&&(Oa=setTimeout(Za,t-Ba.now()-Va)),Ia&&(Ia=clearInterval(Ia))):(Ia||(Da=Ba.now(),Ia=setInterval(Ya,1e3)),Pa=1,Ha(Za)))}Wa.prototype=ja.prototype={constructor:Wa,restart:function(t,e,n){if("function"!=typeof t)throw new TypeError("callback is not a function");n=(null==n?qa():+n)+(null==e?0:+e),this._next||Ra===this||(Ra?Ra._next=this:La=this,Ra=this),this._call=t,this._time=n,Ja()},stop:function(){this._call&&(this._call=null,this._time=1/0,Ja())}};Math.PI,Math.sqrt(5);z((t=>t),["f"]);z((t=>t),["val","p"]);function Xa(t){let e,n;if(t.isLeaf)e=t.height+1,n=t.height+1;else{let a=t.children[0],i=t.children[1];e=u(a)&&!a.h?a.height+1:0,n=u(i)&&!i.h?i.height+1:0}return e-n}const Ga=z((t=>t),["c","p"]);function Qa(t){let{data:e=[],className:n="hago_AVLTree",id:s=c(n),r:l=10,fontSize:o=.7,width:h=500,height:u=h/2,tw:d,th:g,scale:f=100,cwidth:_=f,cheight:y,marginTop:v=50,marginRight:x=50,marginBottom:N=50,marginLeft:k=50,narrow:M=50,margins:w=[v,x,N,k],layout:b="vertical",cluster:S=!0,sibsep:z=1,nsibsep:E=1.1,render:A=["bf","h"]}=t;w=[w[0],w[1]+M,w[2],w[3]+M];const{width:C,height:T}=m(h,u,w),L=function(t,e){let n=[],a={};for(let r=0;r<t.length;r++){let e=t[r];if(Ga(e)){let t={name:e.c,id:e.id?e.id:e.c,parentId:e.p,h:!!e.h&&e.h,i:""+r,className:e.className||"AVLTree_node"},i=""+t.parentId;""!==i&&(a[i]=a[i]||0,a[i]+=1),n.push(t)}}let i={},s=Object.keys(a);for(let r=0;r<s.length;r++){let t=s[r];1===a[t]&&(i={name:e,id:e,parentId:""+t,h:!0,i:""+r,className:"hidden_AVLTree_node"},n.push(i))}return n}(e,s),R=A.includes("bf"),P=A.includes("h"),O=(0,i.QP8)().id((t=>t.id)).parentId((t=>t.parentId))(L);g=g||T,d=d||C;const I=(S?i.ki8:i.G_s)().size([d,g]).separation(((t,e)=>t.parent===e.parent?z:E));I(O);let D=O.links(),F=O.descendants();for(let a=0;a<F.length;a++){let t=F[a];t.h=t.data.h,t.className=t.data.className,t.isLeaf=!t.children,t.hbf=Xa(t),t.name=t.data.name}for(let a=0;a<D.length;a++){let t=D[a];t.h=t.source.data.h||t.target.data.h}const V=(0,i.h5h)().x((t=>"horizontal"===b?t.y:t.x)).y((t=>"horizontal"===b?t.x:t.y)),B=t=>"horizontal"===b?p(t.y,t.x):p(t.x,t.y);return a.createElement(r,{className:n,width:h,height:u,cwidth:_,cheight:y,margins:w},a.createElement("g",{className:"AVLTree_links"},D.map(((t,e)=>!t.h&&a.createElement("g",{key:"avL"+s+"_"+e},a.createElement("path",{d:V(t),fill:"none",stroke:"black"}))))),a.createElement("g",{className:"AVLTree_nodes"},F.map(((t,e)=>!t.h&&a.createElement("g",{key:"avN"+s+"_"+e,transform:B(t)},R&&a.createElement("text",{textAnchor:"middle",fontSize:o+"rem",dx:0,dy:-l-2},""+t.hbf),P&&a.createElement("text",{textAnchor:"middle",fontSize:o+"rem",dx:0,dy:2*l},""+t.height),a.createElement("circle",{r:l,stroke:"black",fill:"white"}),a.createElement("text",{textAnchor:"middle",fontSize:o+"rem",dx:0,dy:l/2.5},""+t.name))))))}},3529:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>m});var a=n(7462),i=(n(7294),n(3905)),s=n(4131);const r={sidebar_label:"Min Heap"},l="MinHeap",o={unversionedId:"HeapMin",id:"HeapMin",title:"MinHeap",description:"The MinHeap module implements a minimum binary heap. Essentially, a",source:"@site/docs/HeapMin.mdx",sourceDirName:".",slug:"/HeapMin",permalink:"/jscratedocs/docs/HeapMin",draft:!1,tags:[],version:"current",frontMatter:{sidebar_label:"Min Heap"},sidebar:"tutorialSidebar",previous:{title:"Max Heap",permalink:"/jscratedocs/docs/HeapMax"},next:{title:"Singly-linked List",permalink:"/jscratedocs/docs/LinkedList"}},h={},m=[{value:"<code>minHeap()</code>",id:"minheap-1",level:2},{value:"<code>push(\ud835\udc63)</code>",id:"push\ud835\udc63",level:2},{value:"<code>insert(v[])</code>",id:"insertv",level:2},{value:"<code>delete()</code>",id:"delete",level:2},{value:"<code>min()</code>",id:"min",level:2},{value:"<code>max()</code>",id:"max",level:2}],c={toc:m};function p(t){let{components:e,...n}=t;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"minheap"},"MinHeap"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"MinHeap")," module implements a minimum binary heap. Essentially, a\nbinary search tree where all parent nodes are smaller than child nodes."),(0,i.kt)(s.mp,{data:[[6,[81,87]],[81,[14,17]],[87,[12,28]],[14,[71,25]],[17,[80,20]],[12,[52,78]],[28,[31,42]]],width:500,height:400,cheight:.4,slim:40,edgeLength:140,mdxType:"Tree"}),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MinHeap")," is implemented with using an array. Given a child node at index\n",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",separator:"true"},",")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{n,}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mpunct"},","))))))," its parent's index ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"P"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{P(n)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"))))))," is computed using the formula:"),(0,i.kt)("div",{className:"math math-display"},(0,i.kt)("span",{parentName:"div",className:"katex-display"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"P"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mrow",{parentName:"mrow"},(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230a"),(0,i.kt)("mfrac",{parentName:"mrow"},(0,i.kt)("mrow",{parentName:"mfrac"},(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow"},"\u2212"),(0,i.kt)("mn",{parentName:"mrow"},"1")),(0,i.kt)("mn",{parentName:"mfrac"},"2")),(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230b"))),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"P(n) = \\left\\lfloor \\dfrac{n-1}{2} \\right\\rfloor")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"2.4em",verticalAlign:"-0.95em"}}),(0,i.kt)("span",{parentName:"span",className:"minner"},(0,i.kt)("span",{parentName:"span",className:"mopen delimcenter",style:{top:"0em"}},(0,i.kt)("span",{parentName:"span",className:"delimsizing size3"},"\u230a")),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,i.kt)("span",{parentName:"span",className:"mfrac"},(0,i.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.3214em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-2.314em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"2"))),(0,i.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,i.kt)("span",{parentName:"span",style:{top:"-3.677em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"1")))),(0,i.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.686em"}},(0,i.kt)("span",{parentName:"span"}))))),(0,i.kt)("span",{parentName:"span",className:"mclose nulldelimiter"})),(0,i.kt)("span",{parentName:"span",className:"mclose delimcenter",style:{top:"0em"}},(0,i.kt)("span",{parentName:"span",className:"delimsizing size3"},"\u230b")))))))),(0,i.kt)("p",null,"For example, a ",(0,i.kt)("inlineCode",{parentName:"p"},"MinHeap")," like the tree above would be stored as:"),(0,i.kt)(s.QA,{data:[6,81,87,14,17,12,28,71,25,80,20,52,78,31,42],width:500,cheight:.15,mdxType:"StaticArray"}),(0,i.kt)("p",null,"Thus, given the child node 78 (at index 12), the parent node is found at:"),(0,i.kt)("div",{className:"math math-display"},(0,i.kt)("span",{parentName:"div",className:"katex-display"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mtable",{parentName:"semantics",rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},(0,i.kt)("mtr",{parentName:"mtable"},(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"},(0,i.kt)("mi",{parentName:"mrow"},"P"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mn",{parentName:"mrow"},"15"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")))),(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"},(0,i.kt)("mrow",{parentName:"mrow"}),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mrow",{parentName:"mrow"},(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230a"),(0,i.kt)("mfrac",{parentName:"mrow"},(0,i.kt)("mrow",{parentName:"mfrac"},(0,i.kt)("mn",{parentName:"mrow"},"12"),(0,i.kt)("mo",{parentName:"mrow"},"\u2212"),(0,i.kt)("mn",{parentName:"mrow"},"1")),(0,i.kt)("mn",{parentName:"mfrac"},"2")),(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230b")))))),(0,i.kt)("mtr",{parentName:"mtable"},(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"}))),(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"},(0,i.kt)("mrow",{parentName:"mrow"}),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mrow",{parentName:"mrow"},(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230a"),(0,i.kt)("mfrac",{parentName:"mrow"},(0,i.kt)("mn",{parentName:"mfrac"},"11"),(0,i.kt)("mn",{parentName:"mfrac"},"2")),(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230b")))))),(0,i.kt)("mtr",{parentName:"mtable"},(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"}))),(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"},(0,i.kt)("mrow",{parentName:"mrow"}),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mrow",{parentName:"mrow"},(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230a"),(0,i.kt)("mn",{parentName:"mrow"},"5.5"),(0,i.kt)("mo",{parentName:"mrow",fence:"true"},"\u230b")))))),(0,i.kt)("mtr",{parentName:"mtable"},(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"}))),(0,i.kt)("mtd",{parentName:"mtr"},(0,i.kt)("mstyle",{parentName:"mtd",scriptlevel:"0",displaystyle:"true"},(0,i.kt)("mrow",{parentName:"mstyle"},(0,i.kt)("mrow",{parentName:"mrow"}),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"5")))))),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"\\begin{aligned} P(15) &= \\left\\lfloor \\dfrac{12-1}{2} \\right\\rfloor \\\\[1em] &= \\left\\lfloor \\dfrac{11}{2} \\right\\rfloor \\\\[1em] &= \\left\\lfloor 5.5 \\right\\rfloor \\\\[1em] &= 5 \\end{aligned}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"10.22em",verticalAlign:"-4.86em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mtable"},(0,i.kt)("span",{parentName:"span",className:"col-align-r"},(0,i.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"5.36em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-7.36em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"P"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord"},"15"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"))),(0,i.kt)("span",{parentName:"span",style:{top:"-4.25em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"})),(0,i.kt)("span",{parentName:"span",style:{top:"-1.75em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"})),(0,i.kt)("span",{parentName:"span",style:{top:"0.75em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"}))),(0,i.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"4.86em"}},(0,i.kt)("span",{parentName:"span"}))))),(0,i.kt)("span",{parentName:"span",className:"col-align-l"},(0,i.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"5.36em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-7.36em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"}),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"minner"},(0,i.kt)("span",{parentName:"span",className:"mopen delimcenter",style:{top:"0em"}},(0,i.kt)("span",{parentName:"span",className:"delimsizing size3"},"\u230a")),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,i.kt)("span",{parentName:"span",className:"mfrac"},(0,i.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.3214em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-2.314em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"2"))),(0,i.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,i.kt)("span",{parentName:"span",style:{top:"-3.677em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"12"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.kt)("span",{parentName:"span",className:"mbin"},"\u2212"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"1")))),(0,i.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.686em"}},(0,i.kt)("span",{parentName:"span"}))))),(0,i.kt)("span",{parentName:"span",className:"mclose nulldelimiter"})),(0,i.kt)("span",{parentName:"span",className:"mclose delimcenter",style:{top:"0em"}},(0,i.kt)("span",{parentName:"span",className:"delimsizing size3"},"\u230b"))))),(0,i.kt)("span",{parentName:"span",style:{top:"-4.25em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"}),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"minner"},(0,i.kt)("span",{parentName:"span",className:"mopen delimcenter",style:{top:"0em"}},(0,i.kt)("span",{parentName:"span",className:"delimsizing size3"},"\u230a")),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mopen nulldelimiter"}),(0,i.kt)("span",{parentName:"span",className:"mfrac"},(0,i.kt)("span",{parentName:"span",className:"vlist-t vlist-t2"},(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"1.3214em"}},(0,i.kt)("span",{parentName:"span",style:{top:"-2.314em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"2"))),(0,i.kt)("span",{parentName:"span",style:{top:"-3.23em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"frac-line",style:{borderBottomWidth:"0.04em"}})),(0,i.kt)("span",{parentName:"span",style:{top:"-3.677em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"},"11")))),(0,i.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"0.686em"}},(0,i.kt)("span",{parentName:"span"}))))),(0,i.kt)("span",{parentName:"span",className:"mclose nulldelimiter"})),(0,i.kt)("span",{parentName:"span",className:"mclose delimcenter",style:{top:"0em"}},(0,i.kt)("span",{parentName:"span",className:"delimsizing size3"},"\u230b"))))),(0,i.kt)("span",{parentName:"span",style:{top:"-1.75em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"}),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"minner"},(0,i.kt)("span",{parentName:"span",className:"mopen delimcenter",style:{top:"0em"}},"\u230a"),(0,i.kt)("span",{parentName:"span",className:"mord"},"5.5"),(0,i.kt)("span",{parentName:"span",className:"mclose delimcenter",style:{top:"0em"}},"\u230b")))),(0,i.kt)("span",{parentName:"span",style:{top:"0.75em"}},(0,i.kt)("span",{parentName:"span",className:"pstrut",style:{height:"3.45em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord"}),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"5")))),(0,i.kt)("span",{parentName:"span",className:"vlist-s"},"\u200b")),(0,i.kt)("span",{parentName:"span",className:"vlist-r"},(0,i.kt)("span",{parentName:"span",className:"vlist",style:{height:"4.86em"}},(0,i.kt)("span",{parentName:"span"})))))))))))),(0,i.kt)("p",null,"Similarly, given a parent node at index ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",separator:"true"},",")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{n,}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.625em",verticalAlign:"-0.1944em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mpunct"},","))))))," its left child's index\n",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"L"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{L(n)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"))))))," is found at:"),(0,i.kt)("div",{className:"math math-display"},(0,i.kt)("span",{parentName:"div",className:"katex-display"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"L"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"2"),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow"},"+"),(0,i.kt)("mn",{parentName:"mrow"},"1")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"L(n) = 2n+1")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"L"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"2"),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.6444em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"1")))))),(0,i.kt)("p",null,"and its right child's index ",(0,i.kt)("span",{parentName:"p",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"R"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{R(n)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"))))))," can be found at:"),(0,i.kt)("div",{className:"math math-display"},(0,i.kt)("span",{parentName:"div",className:"katex-display"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"R"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mn",{parentName:"mrow"},"2"),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow"},"+"),(0,i.kt)("mn",{parentName:"mrow"},"2"),(0,i.kt)("mo",{parentName:"mrow",separator:"true"},";")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"R(n) = 2n+2;")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.00773em"}},"R"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.7278em",verticalAlign:"-0.0833em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"2"),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}}),(0,i.kt)("span",{parentName:"span",className:"mbin"},"+"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2222em"}})),(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"0.8389em",verticalAlign:"-0.1944em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},"2"),(0,i.kt)("span",{parentName:"span",className:"mpunct"},";")))))),(0,i.kt)("h2",{id:"minheap-1"},(0,i.kt)("inlineCode",{parentName:"h2"},"minHeap()")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Instantiates an instance of ",(0,i.kt)("inlineCode",{parentName:"li"},"MinHeap"),"."),(0,i.kt)("li",{parentName:"ul"},"If no arguments are passed, the heap is initially empty."),(0,i.kt)("li",{parentName:"ul"},"Otherwise, comma separated data values (or a spread of an array of data\nvalues) will be used to populate the heap.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const h = minHeap(1, 8, 6, 5, 3, 9);\nh.print();\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"[1,3,6,8,5,9]\n")),(0,i.kt)("h2",{id:"push\ud835\udc63"},(0,i.kt)("inlineCode",{parentName:"h2"},"push(\ud835\udc63)")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Inserts the value \ud835\udc63 into the heap."),(0,i.kt)("li",{parentName:"ul"},"Return: ",(0,i.kt)("inlineCode",{parentName:"li"},"this")),(0,i.kt)("li",{parentName:"ul"},"Worst Case: ",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"lg"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{O(\\lg n)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mop"},"l",(0,i.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,i.kt)("li",{parentName:"ul"},"Average Case: ",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"lg"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{O(\\lg n)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mop"},"l",(0,i.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")")))))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const h = minHeap().push(1).push(8).push(6).push(5).push(3).push(9);\nh.print();\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"[1,3,6,8,5,9]\n")),(0,i.kt)("h2",{id:"insertv"},(0,i.kt)("inlineCode",{parentName:"h2"},"insert(v[])")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Takes an array argument, and pushes each array element into the heap.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const h = minHeap().insert([1, 8, 6, 5, 3, 9]);\nh.print();\n")),(0,i.kt)("h2",{id:"delete"},(0,i.kt)("inlineCode",{parentName:"h2"},"delete()")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Removes the smallest value in the heap."),(0,i.kt)("li",{parentName:"ul"},"Return:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"If the heap is not empty: The value deleted."),(0,i.kt)("li",{parentName:"ul"},"If the heap is empty: null."))),(0,i.kt)("li",{parentName:"ul"},"Worst case: ",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"lg"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{O(\\lg n)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mop"},"l",(0,i.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,i.kt)("li",{parentName:"ul"},"Best case: ",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"lg"),(0,i.kt)("mo",{parentName:"mrow"},"\u2061"),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{O(\\lg n)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mop"},"l",(0,i.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")")))))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const h = minHeap().insert([1, 8, 6, 5, 3, 9]);\nh.print();\nh.delete();\nh.print();\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"[1,3,6,8,5,9]\n[3,5,6,8,9]\n")),(0,i.kt)("h2",{id:"min"},(0,i.kt)("inlineCode",{parentName:"h2"},"min()")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Returns the smallest value in the heap, without mutating the heap."),(0,i.kt)("li",{parentName:"ul"},"If the heap is empty, returns ",(0,i.kt)("inlineCode",{parentName:"li"},"null"),"."),(0,i.kt)("li",{parentName:"ul"},"Because the smallest value in the heap is always the first element, this\nis a trivial ",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mn",{parentName:"mrow"},"1"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{O(1)}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord"},"1"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"))))))," operation.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const h = minHeap().insert([1, 8, 6, 5, 3, 9]);\nconst m = h.min();\nPrint(m);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"1\n")),(0,i.kt)("h2",{id:"max"},(0,i.kt)("inlineCode",{parentName:"h2"},"max()")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Returns the largest value in the heap, without mutating the heap."),(0,i.kt)("li",{parentName:"ul"},"Because the a min heap prioritizes the lesser of two values, this\nrequires iterating over ",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,i.kt)("mn",{parentName:"mrow"},"2")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{n/2}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mord"},"/2"))))))," nodes (only the leaf nodes can possibly\ncontaining a maximum). Accordingly, this has a running time function of\n",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"T"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mo",{parentName:"mrow"},"="),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},"/"),(0,i.kt)("mn",{parentName:"mrow"},"2"),(0,i.kt)("mo",{parentName:"mrow",separator:"true"},",")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{T(n) = n/2,}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.13889em"}},"T"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mrel"},"="),(0,i.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.2778em"}}),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mord"},"/2"),(0,i.kt)("span",{parentName:"span",className:"mpunct"},","))))))," or, in big-O terms, ",(0,i.kt)("span",{parentName:"li",className:"math math-inline"},(0,i.kt)("span",{parentName:"span",className:"katex"},(0,i.kt)("span",{parentName:"span",className:"katex-mathml"},(0,i.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,i.kt)("semantics",{parentName:"math"},(0,i.kt)("mrow",{parentName:"semantics"},(0,i.kt)("mi",{parentName:"mrow"},"O"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,i.kt)("mi",{parentName:"mrow"},"n"),(0,i.kt)("mo",{parentName:"mrow",stretchy:"false"},")"),(0,i.kt)("mi",{parentName:"mrow",mathvariant:"normal"},".")),(0,i.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"{O(n).}")))),(0,i.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,i.kt)("span",{parentName:"span",className:"base"},(0,i.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,i.kt)("span",{parentName:"span",className:"mord"},(0,i.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,i.kt)("span",{parentName:"span",className:"mopen"},"("),(0,i.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,i.kt)("span",{parentName:"span",className:"mclose"},")"),(0,i.kt)("span",{parentName:"span",className:"mord"},".")))))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const h = minHeap().insert([1, 8, 6, 5, 3, 9]);\nconst m = h.max();\nPrint(m);\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-terminal"},"9\n")))}p.isMDXComponent=!0}}]);