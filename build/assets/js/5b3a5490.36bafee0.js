"use strict";(self.webpackChunkjscratedocs=self.webpackChunkjscratedocs||[]).push([[222],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,b=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(b,s(s({ref:t},c),{},{components:n})):r.createElement(b,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7173:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_label:"Sort API",sidebar_position:3},s="Sort",i={unversionedId:"sort",id:"sort",title:"Sort",description:"The sort module provides several sorting algorithms. The sorters operate",source:"@site/docs/sort.mdx",sourceDirName:".",slug:"/sort",permalink:"/jscratedocs/docs/sort",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Sort API",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Math API",permalink:"/jscratedocs/docs/Num"},next:{title:"String API",permalink:"/jscratedocs/docs/string"}},l={},p=[{value:"bubble(\ud835\udc34,\ud835\udc42?)",id:"bubble\ud835\udc34\ud835\udc42",level:2},{value:"selection(\ud835\udc34,\ud835\udc42?)",id:"selection\ud835\udc34\ud835\udc42",level:2},{value:"insertion(\ud835\udc34,\ud835\udc42?)",id:"insertion\ud835\udc34\ud835\udc42",level:2},{value:"mergeSort(\ud835\udc34,\ud835\udc42?)",id:"mergesort\ud835\udc34\ud835\udc42",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sort"},"Sort"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"sort")," module provides several sorting algorithms. The sorters operate\non native JavaScript arrays consisting of either (1) numbers, (2) strings,\nor (3) an array of objects. If an array of objects is passed, a callback\nfunction specifying what keys to compare must be specified."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE:")," For the sort methods below with a parameter ",(0,a.kt)("inlineCode",{parentName:"p"},"\ud835\udc42?"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"\ud835\udc42?")," signifies\nan optional string parameter that sets the sort order. Valid ",(0,a.kt)("inlineCode",{parentName:"p"},"\ud835\udc42")," values\nare:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'"<"')),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If the array consists of numbers, the elements are sorted in descending\norder (greatest to least)."),(0,a.kt)("li",{parentName:"ul"},"If the array consists of strings, the elements are sorted in\nzetabetical (reverse alphabetical) order."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},'">"')),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This is the default value."),(0,a.kt)("li",{parentName:"ul"},"If the array consists of numbers, the elements are sorted in ascending\norder (from least to greatest)."),(0,a.kt)("li",{parentName:"ul"},"If the array is consists of strings, the elements are sorted in\nalphabetical order."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"(a: any, b: any) => boolean")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A callback function that takes array elements ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"b"),", and returns\na Boolean (a comparison of ",(0,a.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"b"),").")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"This argument must be provided if the array consists of objects.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"For example, in the snippet below, an array of objects containing a\nstudent field and an age field are to be sorted. For both calls, a\nfunction is passed as the order parameter. In the first call, the\nstudent field value are compared with the ",(0,a.kt)("inlineCode",{parentName:"p"},"strcmp()")," function (this\nfunction compares strings alphabetically; see the String API section).\nIn the second call, the objects are sorted by name:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { insertion } from "@sort";\nimport { strcmp } from "@str";\n\nconst students = [\n    { student: "Louise", age: 23 },\n    { student: "Ragnar", age: 21 },\n    { student: "Kaito", age: 22 },\n];\n\ninsertion(students, (a, b) => strcmp(a.student, b.student));\nconsole.log(students);\n\ninsertion(students, (a, b) => a.age > b.age);\nconsole.log(students);\n')),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-terminal"},"[ { student: 'Kaito', age: 22 }, // sorted objects by student field\n    { student: 'Louise', age: 23 },\n    { student: 'Ragnar', age: 21 } ]\n\n[ { student: 'Ragnar', age: 21 }, // sorted objects by age field\n    { student: 'Kaito', age: 22 },\n    { student: 'Louise', age: 23 } ]\n")))))),(0,a.kt)("h2",{id:"bubble\ud835\udc34\ud835\udc42"},"bubble(\ud835\udc34,\ud835\udc42?)"),(0,a.kt)("p",null,"Given the array \ud835\udc34, returns the array sorted with the bubble sort."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { bubble } from "@sort";\n\nconst names = ["amy", "connor", "daniel", "boram"];\nconst nums = [1, 3, 4, 5];\n\nbubble(names);\nbubble(nums);\n\nconsole.log(names);\nconsole.log(nums);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terminal"},"[ 'amy', 'boram', 'connor', 'daniel' ]\n[ 1, 3, 4, 5 ]\n")),(0,a.kt)("h2",{id:"selection\ud835\udc34\ud835\udc42"},"selection(\ud835\udc34,\ud835\udc42?)"),(0,a.kt)("p",null,"Returns array \ud835\udc34 sorted with selection sort."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { selection } from "@sort";\n\nconst names = ["amy", "connor", "daniel", "boram"];\nconst nums = [1, 3, 4, 5];\n\nselection(names);\nselection(nums);\n\nconsole.log(names);\nconsole.log(nums);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terminal"},"[ 'amy', 'boram', 'connor', 'daniel' ]\n[ 1, 3, 4, 5 ]\n")),(0,a.kt)("h2",{id:"insertion\ud835\udc34\ud835\udc42"},"insertion(\ud835\udc34,\ud835\udc42?)"),(0,a.kt)("p",null,"Returns array \ud835\udc34 sorted with insertion sort."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { insertion } from "@sort";\n\nconst fruits = ["kiwis", "apples", "mangoes", "berries"];\nconst nums = [17, 5, 9, 8, 5];\n\ninsertion(fruits);\ninsertion(nums);\n\nconsole.log(fruits);\nconsole.log(nums);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terminal"},"[ 'apples', 'berries', 'kiwis', 'mangoes' ]\n[ 5, 5, 8, 9, 17 ]\n")),(0,a.kt)("h2",{id:"mergesort\ud835\udc34\ud835\udc42"},"mergeSort(\ud835\udc34,\ud835\udc42?)"),(0,a.kt)("p",null,"Returns a ",(0,a.kt)("em",{parentName:"p"},"new")," array \ud835\udc34 with the elements sorted via merge sort."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { mergeSort } from "@sort";\n\nconst stock = [\n    { fruit: "rice", quantity: 113 },\n    { fruit: "potatoes", quantity: 128 },\n    { fruit: "bread", quantity: 137 },\n];\n\nconst sortedStock = mergeSort(stock, (a, b) => a.quantity > b.quantity);\nconsole.log(sortedStock);\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-terminal"},"[ { fruit: 'rice', quantity: 113 },\n  { fruit: 'potatoes', quantity: 128 },\n  { fruit: 'bread', quantity: 137 } ]\n")))}u.isMDXComponent=!0}}]);